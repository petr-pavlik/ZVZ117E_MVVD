[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Metody vyhodnocování vodohospodářských dat",
    "section": "",
    "text": "1 Úvodem\nNa těchto stránkách se nachází průvodce ke cvičením z kurzu ZVZ117E Metody vyhodnocování vodohospodářských dat, vyuřovaném na Fakultě životního prostředí České zemědělské univerzity. Jeho obsahem jsou materiály ke všem cvičením spolu se zkrácenou teoretickou částí. Text nemá za ambici komplexní teoretický výklad látky - nenahrazuje ani přednášky ani skripta. Jedná se o průvodce cvičeními, nicméně pro potřeby cvičení teorii ve zkrácené podobě připomene.\nVzhledem k tomu, že je tento text orientován na osvojení základních postupů při statistickém zpracování dat, jednotlivé postupy jsou voleny jako nejjednodušší možné. Obecně tedy platí, že veškeré úkony jsou prováděny se zvoleným didaktickým cílem, který je vytyčen na začátku každého cvičení. Tentýž kód je často možné zapsat elegantněji, nebo efektivněji s pomocí pokročilejších nástrojů, na jejichž existenci je čtenář občas doplňkově upozorněn."
  },
  {
    "objectID": "index.html#doporučená-literatura",
    "href": "index.html#doporučená-literatura",
    "title": "Metody vyhodnocování vodohospodářských dat",
    "section": "1.1 Doporučená literatura",
    "text": "1.1 Doporučená literatura\nPopisná statistiky je v cvičena v rozsahu textu Puš (2007) a Jarušková (2006) obsahuje úvod do matematické statistiky.\nK jazyku R je\n\n\n\n\nJarušková, Daniela. 2006. Pravděpodobnost a matematická statistika. Česká technika-nakladatelství ČVUT.\n\n\nPuš, Vladimír. 2007. Popisná statistika. Česká zemědělská univerizita v Praze."
  },
  {
    "objectID": "intro.html#typografické-konvence",
    "href": "intro.html#typografické-konvence",
    "title": "2  Organizace textu",
    "section": "2.1 Typografické konvence",
    "text": "2.1 Typografické konvence\nZdrojový kód v textu je barevně odlišen a jednotlivé úkony jsou v kódu doprovozeny číslovanými komentáři v kroužku, které se aktivují najetím kurzoru myši. V případě, že zdrojový kód obsahuje pouze jeden výraz k vyhodnocení, je vždy výstup uveden přímo pod ním.\n\n\nKód\n1cat(\"Příklad výrazu a jeho vyhodnocení\")\n\n\n\n1\n\nToto je komentář.\n\n\n\n\nPříklad výrazu a jeho vyhodnocení\n\n\nNěkdy je nutné provést vyhodnocení více po sobě jdoucích výrazů a text byl zbytečně nafukován. V takovém případě je výstup zachován přímo v okně zdrojového kódu a je uvozen dvěma po sobě jdoucími znaky \\(\\#\\#\\).\n\n\nKód\n1mean(1:10)\nmedian(1:10)\nsd(1:10)\n## [1] 5.5\n## [1] 5.5\n## [1] 3.02765\n\n\n\n1\n\nSjednocené výstupy v bloku kódu.\n\n\n\n\nPokud se kód nachází uvnitř textu, je opět barevně odlišen a vysázen neproporcionálním písmem. Přičemž funkce je vždy uvedena s příslušnými závorkami a text, který je v kódu navíc, je vždy ohraničen znaky \\(&lt;\\) a \\(&gt;\\). Příkladem budiž mean(x = &lt;vektor čísel&gt;)."
  },
  {
    "objectID": "intro.html#data",
    "href": "intro.html#data",
    "title": "2  Organizace textu",
    "section": "2.2 Data",
    "text": "2.2 Data\n\nPřehled datových sad ke cvičením.\n\n\nKapitola\nSoubor\nPopis\nReference\n\n\n\n\nKapitola 5 Úloha 3\n\nDlouhodobá klimatická bilance na smyšlených povodích\n-\n\n\nKapitola 6 Úloha 4b\n\nVšelibice, úhrn z manuálního srážkoměru\n\n\n\nSekce 7.1.1.1\n\nDenní data měřená v rámci iniciativy MOPEX\n\n\n\nKapitola 11\n\nPrůměrný denní průtok 11/1991 - 12/2023 QD165600 - Louňovice pod Blaníkem\nČeský hydrometeorologický ústav\nPodmínky užití\n\n\nKapitola 9\n\nSmyšlená teplotní data ze stanic T1/T2"
  },
  {
    "objectID": "intro.html#verze-textu",
    "href": "intro.html#verze-textu",
    "title": "2  Organizace textu",
    "section": "2.3 Verze textu",
    "text": "2.3 Verze textu\nTento text byl vytvořen s pomocí verze R 4.4.0 a jmenných prostorů balíků ve verzích:\n\n\n\n\n\n\nVersion\n\n\n\n\nbase\n4.4.0\n\n\ncli\n3.6.3\n\n\ncompiler\n4.4.0\n\n\ndatasets\n4.4.0\n\n\ndigest\n0.6.37\n\n\nevaluate\n1.0.1\n\n\nfastmap\n1.2.0\n\n\nglue\n1.8.0\n\n\ngraphics\n4.4.0\n\n\ngrDevices\n4.4.0\n\n\nhtmltools\n0.5.8.1\n\n\nhtmlwidgets\n1.6.4\n\n\njsonlite\n1.8.9\n\n\nknitr\n1.48\n\n\nlifecycle\n1.0.4\n\n\nmagrittr\n2.0.3\n\n\nmethods\n4.4.0\n\n\nrlang\n1.1.4\n\n\nrmarkdown\n2.28\n\n\nrstudioapi\n0.17.1\n\n\nstats\n4.4.0\n\n\nstringi\n1.8.4\n\n\nstringr\n1.5.1\n\n\ntools\n4.4.0\n\n\nutils\n4.4.0\n\n\nwebexercises\n1.1.0\n\n\nxfun\n0.48"
  },
  {
    "objectID": "01_uvod_do_R_1.html#hlavní-okna-a-panely",
    "href": "01_uvod_do_R_1.html#hlavní-okna-a-panely",
    "title": "3  R & RStudio",
    "section": "3.1 Hlavní okna a panely",
    "text": "3.1 Hlavní okna a panely\n\n\n\nObrázek 3.1: Obr. 1: Základní layout prostředí RStudio.\n\n\nV základním zobrazení Obrázek 3.1 bychom měli v levé části vidět panel Console. S konzolí nebudeme pracovat příliš intenzivně, slouží zejména k zadávání jednoduchých příkazů, například vyhodnocení proměnné. Pravou část vidíme rozdělenu na dolní a horní polovinu. V té horní jsou důležité panely Environment kde se nachází všechny objekty a vlastní funkce, které jsme vytvořili v rámci session. Dále Výchozí rozvržení je možné měnit Tools &gt; Global options… &gt; Pane layout.\n\n\n\n\n\n\nÚloha\n\n\n\n\nProvedeme jedno užitečné nastavení duhových závorek\n\n\n\n\nObr. 2: Nastavení duhových závorek a dalších vlastností v okně Global Options…"
  },
  {
    "objectID": "01_uvod_do_R_1.html#zakládáme-projekt",
    "href": "01_uvod_do_R_1.html#zakládáme-projekt",
    "title": "3  R & RStudio",
    "section": "3.2 Zakládáme projekt",
    "text": "3.2 Zakládáme projekt\nJe vhodné seskupovat svoji práci do zv. projektů - ucelených souborů skriptů, dat a výstupů - podle jednotlivých projektů, kterým se věnuji.\n\nPři spuštěném programu z hlavní nabídky vybereme File &gt; New Project…\n\nVybereme New Directory a zvolíme New Project. Ostatní možnosti v tomto kurzu využívate nebudeme.\n\nProjektu je dále nutné zadat název Directory name. Pokud používate verzovací systém Git, můžete zaškrtnout volbu Create a git repository. V tomto kurzu používat nebudeme.\n\nPo úspěšném založení projektu by se mělo zobrazit hlavní okno programu s přednastvenými panely. V nastavení učeben ČZU odpovídá rozvržení 1. obrázku.\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nVytvořte projekt s názvem “MVVD_cv1”."
  },
  {
    "objectID": "01_uvod_do_R_1.html#pracovní-postup-a-jeho-opakovatelnost",
    "href": "01_uvod_do_R_1.html#pracovní-postup-a-jeho-opakovatelnost",
    "title": "3  R & RStudio",
    "section": "3.3 Pracovní postup a jeho opakovatelnost",
    "text": "3.3 Pracovní postup a jeho opakovatelnost\nK systematické práci a analýze zejména v exaktních vědách patří dodržování jistých pracovních zásad, které umožňují jednak objektivní kontrolu výsledků a jednak jejich opětovného získání. Níže je uvedeno pár zásad, jejichž dodržování vede k celkové duševní pohodě a rovnováze jak vaší vlastní, tak kolegů.\n\nPři psaní kódu se řiďte unifikovaným schématem jmenných konvencí, odsazování a vkládání mezer, a komentování. Jedno takové má například Hadley Wickham, či Google.\n\nKaždé cvičení začněte ideálně tvorbou nového projektu v oddělené složce, nebo alespoň nového skriptu.\n\nPři zavírání RStudio neukládejte pracovní prostředí do souboru “*.RData”. Uloží se do něj vše co máte právě v Environment, což nemusí nutně pocházet z pracovního postupu uchovaného ve skriptech (byť při dodržování jiných zásad z tohoto sezamu by tomu tak být nemělo).\nR bohužel umožnuje připínat a odepínat data.frame pomocí funkcí attach() a detach(), na které je vhodné ihned po přečtení této věty zapomenout.\n\n\n\nKód\n?ls\nrm(list = ls())\n?objects\n\n\n\n\nKód\nl &lt;- list(A = 1:3, B = 3:5)\nattach(l)\nA\n\n\n[1] 1 2 3\n\n\n\ndtto funkce fix(), která umožňuje manipulovat s daty formou GUI tabulkového procesoru.\n\nNaučte se používat :: značící jmenný prostor, ze kterého funkce pochází. Například filter() je funkce definována ve více jmenných prostorech často používaných balíčků.\nOddělujte vzájemně surová data, zpracovaná data, skripty analýz a výstupy. Souborová struktura projektu může vypadat například takto:\n~/mzp_analyza/\n ├── data/\n |   ├── raw_data/ \n |   └── zpracovana_data/ \n ├── skripty/\n |   └── 01_load.R\n ├── vystupy/\n |  └── 01_liniovy_graf_m_denni_vody.pdf\n └── mzp_analyza.RProj"
  },
  {
    "objectID": "02_uvod_do_R_2.html#nápověda",
    "href": "02_uvod_do_R_2.html#nápověda",
    "title": "4  Opakovaní R",
    "section": "4.1 Nápověda",
    "text": "4.1 Nápověda\nZadává se do konzole ve tvaru help(&lt;jméno funkce&gt;), nebo &lt;jmeno funkce&gt;. Pokud bychom se chtěli podívat přímo do kódu funkce, také je to možné, jméno funkce pouze vepíšeme do konzole bez závorek, případně použijeme příkazu View(&lt;jmeno funkce&gt;). Kromě toho existuje v R také help.search(&lt;jméno funkce&gt;) pod zkratkou ??, jež hledá fulltextovou nápovědu napříč nainstalovanými balíčky. Dále je ještě možné prohledat mailing list jazyka R pomocí funkce RSiteSearch(), která otevře nové okno předdefinovaného prohlížeče. Dále jsou velmi užitečné tematicky ucelené karty nápověd: ?Logical, ?Constants, ?Control, ?Arithmetic, ?Syntax, ?Special a další.\n\n\n\n\n\n\nÚloha\n\n\n\n\nVyhledejte nápovědu k DateTimeClasses.\n\n\nCo reprezentují třídy POSIXct a POSIXlt?\n\nJaký je mezi nimi rozdíl?\n\nNalezněte funkci pro výpočet \\(5!\\)"
  },
  {
    "objectID": "02_uvod_do_R_2.html#jmenné-konvence",
    "href": "02_uvod_do_R_2.html#jmenné-konvence",
    "title": "4  Opakovaní R",
    "section": "4.2 Jmenné konvence",
    "text": "4.2 Jmenné konvence\nObjekty, které vznikají při práci s R musí splňovat následující jmenné konvence. Název objektu nelze začínat číslovkou nebo operátorem, nesmít být totžný s žádným klíčovým slovem, obsahovat mezeru.\n\nKlíčová slova\nif, else, repeat, while, function, for, in, next, repeat, break, TRUE, FALSE, NULL, Inf, NaN, NA, NA_integer_, NA_real_, NA_complex_, NA_character_, a speciální znak: _\nNedoporučuje se vkládat do názvu proměnné tečku, např. morava.prutoky, a pojmenovávat shodně s běžně používanou funkcí. R je “case-sensitive” jazyk tzn., že proměnná X se nerovná x.\n\n\n\n\n\n\nÚloha\n\n\n\n\nIntuitivně by nás mohlo vést nahrát data do proměnné data. Je to chybný postup, neboť data() je funkce zpřístupňující datové sady, kterou jsou součástí instalace. Vyzkoušejte.\n\n\n\n\n\nPříklady nevhodných proměnných\naaa, Morávka průtok [m/s], moje.proměnná\nŽádné z těchto jmen proměnných není proti"
  },
  {
    "objectID": "02_uvod_do_R_2.html#uvozovky-a-závorky",
    "href": "02_uvod_do_R_2.html#uvozovky-a-závorky",
    "title": "4  Opakovaní R",
    "section": "4.3 Uvozovky a závorky",
    "text": "4.3 Uvozovky a závorky\nPředstavují párové znaky jazyka R. Závorky se používají trojího typu: kulaté, hranaté a složené a všechny mají jasně vymezné pole působnosti.\n\n() se používají vždy se jménem funkce a uvozují prostor ve kterém se parametrizují argumenty funkce.\n\n[] se vždy pojí se jménem objektu (vektoru, pole, listu, …) a vymezují výběr z daného objektu.\n\n{} ohraničují blok kódu, který se má vykonat v celku.\n\n\nUvozovky uvozují textové řetězce. Lze používat jak dvojté \" tak jednoduché ' uvozovky zcela zástupně, je pouze třeba uzavírat shodným typem. Hojně se lze setkat se zpětnými uvozovkami, které se například použijí pro ohraničení nestandardního názvu sloupce ve struktuře.\n\n\nKód\n\"Správně\"\n\"Špatně'\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nZadejte špatnou variantu z kódu výše do konzole a sledujte chování prostředí. Co vyjadřuje znak +?"
  },
  {
    "objectID": "02_uvod_do_R_2.html#operátory",
    "href": "02_uvod_do_R_2.html#operátory",
    "title": "4  Opakovaní R",
    "section": "4.4 Operátory",
    "text": "4.4 Operátory\nRozlišujeme operátory aritmetické, relační, přiřazení a patří sem i množinové funkce.\n\n\n\n\n\n\n\nZnak\nVýznam\n\n\n\n\n+ , - , * , / , %% , %/% , ** nebo ^, %*%\naritmetické operátory (sčítání, odčítání, násobení, dělení, modulo, celočíselné dělení, mocnění a maticové násobení)\n\n\n&gt; ,&gt;= , &lt; , &lt;= , == , !=\nrelační operátory (větší/menžší než, rovno, nerovno)\n\n\n! , & , && , | , ||\nlogické (ne, a soužasně, zdvojené po prvcích vektoru)\n\n\n~\nzadání funkčního vztahu\n\n\n&lt;- , =, &lt;&lt;-, -&gt;\noperátory přiřazení\n\n\n$\njmenný index v heterogenních strukturách\n\n\n:\nrozsah\n\n\nisTRUE() , all() , any() , %in% , setdiff()\nmnožinové funkce\n\n\n\n\n\nKód\n\n11xor(x)\n12isTRUE(x)\n13any()\n14all()\n15%in%\n16setdiff(x, y)\n\n\n\n11\n\nNegace\n\n12\n\nJe \\(x\\) “pravda”?\n\n13\n\nJe něco z obsahu “pravda”?\n\n14\n\nJe vše z obsahu “pravda”?\n\n15\n\nJe něco obsaženo v?\n\n16\n\nChybí něco něco z obsahu v?\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nPoužite k výpočtu operátory či množinové funkce:\n\n\nZjistěte, zda je číslo 1109388 dělitelné 7.\n\nDo vektoru \\(\\mathbf{\\mathrm{a}}\\) uložte násobky 3 v rozsahu \\(\\langle-121;30\\rangle\\) a \\(\\mathbf{\\mathrm{b}}\\) násobky 7 v rozmezí\n\nVypište hodnoty"
  },
  {
    "objectID": "02_uvod_do_R_2.html#matematické-funkce",
    "href": "02_uvod_do_R_2.html#matematické-funkce",
    "title": "4  Opakovaní R",
    "section": "4.5 Matematické funkce",
    "text": "4.5 Matematické funkce\n\n\n\n\n\n\n\nFunkce\nVýznam\n\n\n\n\nlog(x)\nlogaritmus \\(x\\) o základu \\(e\\)\n\n\nexp(x)\nodlogaritmování \\(x(e^x)\\)\n\n\nlog(x, n)\nlogaritmus \\(x\\) o základu \\(n\\)\n\n\nlog10(x)\nlogaritmus \\(x\\) o základu \\(10\\)\n\n\nsqrt(x)\ndruhá odmocnina z \\(x\\)\n\n\nfactorial(x)\n\\(x!\\)\n\n\nchoose(n, x)\nbinomické koeficienty \\[                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                  \\binom{n}{k} = \\frac{n!}{k!(n-k)!}              \n                                                                                                                                                                                                                               \\]\n\n\nceiling(x)\nnejmenší celé číslo větší než \\(x\\)\n\n\nfloor(x)\nnejvětší celé číslo před \\(x\\)\n\n\ntrunc(x)\nnejbliřší celé číslo mez i\\(x\\) a 0\n\n\nround(x, digits)\nzaokrouhlení \\(x\\) na \\(n\\) desetinných míst\n\n\nsignif(x, digits)\nzaokrouhlení na počet platných číslic\n\n\ncos(x) , sin(x) , tan(x)\nfunkce kosinus, sinus, tangens v radianech\n\n\nacos(x) , asin(x) , atan(x)\ninverzní trigonometrické funkce\n\n\nabs(x)\nabsolutní hodnota\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nVyhodnoťte s pomocí R následující výrazy:\n\n\n\\(1 + 3 \\cdot (2 / 3)\\:\\mathrm{mod}\\:3=\\) \n\n\\(\\dfrac{\\sin(2.3)}{\\cos(\\pi)}=\\) \n\n\\(\\sum\\limits_{i = 1}^{53}i=\\) \n\n\\(\\dfrac{-\\infty}{0}=\\) , \\(\\dfrac{-\\infty}{\\infty}=\\) , \\(\\dfrac{0}{0}=\\) \n\n\\(\\left(\\dfrac{2}{35}\\right)^{0.5} \\cdot 3 \\cdot (2 / 3)=\\) \n\n\\(20!=\\) \n\n\\(\\int_{0}^{3\\pi} \\sin(x) dx=\\) \n\n\\(\\sqrt[3]{561}=\\) \n\n\\(\\mathrm{diag}\\left( \\pmatrix{5\\\\ 3}\\cdot \\pmatrix{6 & 5}\\right)=\\) \n\n\\(y=x^2 + 3\\sqrt{x};\\:y^\\prime=\\)"
  },
  {
    "objectID": "02_uvod_do_R_2.html#datové-typy",
    "href": "02_uvod_do_R_2.html#datové-typy",
    "title": "4  Opakovaní R",
    "section": "4.6 Datové typy",
    "text": "4.6 Datové typy\nTvoří prvky struktur. R je dynamicky typovaný jazyk, nepožaduje před zavedením proměnné její deklaraci.\n\nZákladní datové typy a nucené převody mezi nimi.\n\n\n\n\n\n\n\n\n\n\n\nlogical\ninteger\nnumeric\ncomplex\ncharacter\n\n\n\n\nlogical\nlogical\ninteger\nnumeric\ncomplex\ncharacter\n\n\ninteger\nlogical\ninteger\nnumeric\ncomplex\ncharacter\n\n\nnumeric\nlogical\nnumeric\nnumeric\ncomplex\ncharacter\n\n\ncomplex\nlogical\ninteger + warning\nnumeric + warning\ncomplex\ncharacter\n\n\ncharacter\nNA_logical\nNA_integer + warning\nNA_numeric + warning\nNA_complex + warning\ncharacter\n\n\n\nK datovým typům (třídám) se pojí funkce is.___ a as.___ kteří slouží k dotazování na typ, resp. jeho nucenou změnu a dále funkce class(), mode() .\n\n\nKód\nis.character(\"ABC\")\n\n\n[1] TRUE\n\n\nKód\nas.integer(11 + 1i)\n\n\nWarning: imaginary parts discarded in coercion\n\n\n[1] 11\n\n\nChybějící záznamy a speciální numerické případy NA, NaN, NULL, Inf, -Inf jsou hodnoty, které mohou vzniknout například jako výsledek početního úkonu, nebo špatného importu dat. Výraz NA je tvořen v datovém typu logical, nejméně náročném na paměť. Jinak je možné specifikovat chybějící hodnotu ve všech ostatních datových typech NA_real_ (odpovídá double), NA_integer_, NA_complex_ a NA_character_, které je vhodné využít zejména při vytváření datového rámce s přesně zadaným typem sloupců. NULL je návratová hodnota mnoha funkcí a výrazů, reprezentuje prázdný objekt. Výsledky NaN a ±Inf pochází z aritmetických operací \\(\\dfrac{1}{0}\\) resp. \\(\\dfrac{\\pm0}{1}\\) . na.omit(), is.na(), complete.cases()."
  },
  {
    "objectID": "02_uvod_do_R_2.html#základní-datové-struktury",
    "href": "02_uvod_do_R_2.html#základní-datové-struktury",
    "title": "4  Opakovaní R",
    "section": "4.7 Základní datové struktury",
    "text": "4.7 Základní datové struktury\nZákladní datové struktury rozlišujeme na atomické (homogenní) a heterogenní datové struktury.\n\n4.7.1 Homogenní datové struktury\nHomogenní datové struktury obsahují atomické vektory, faktory, matice a pole. Název je odvozen od jejich omezení v podvýběru obsahovat pouze typ sebe sama tzn. podvýběr matice může být opět pouze matice.\n\n4.7.1.1 Atomický vektor vector\nVektor je v jazyce R základní stavební strukturou, nic jaká skalární veličina zde není. Koncept vektoru je zde chápán v matematickém smyslu jako jednosloupcová matice \\(\\boldsymbol{\\mathrm{A}} = (a_{ij})_{m1}\\) hodnot.\n\\[\n\\mathbf{\\mathrm{u}} =\n\\begin{pmatrix}\n1\\\\\n1.5\\\\\n-14\\\\\n7.223\\\\\n\\end{pmatrix}, \\qquad\n\\mathbf{\\mathrm{v}} =\n\\begin{pmatrix}\n\\mathrm{TRUE}\\\\\n\\mathrm{FALSE}\\\\\n\\mathrm{TRUE}\\\\\n\\mathrm{TRUE}\\\\\n\\end{pmatrix}, \\qquad\n\\mathbf{\\mathrm{u^T}} =\n\\begin{pmatrix}\n1 & 1.5 & -14 & 7.233\\\\\n\\end{pmatrix}\n\\]\nMůže nabývat jakéhokoliv datového typu, nicméně všechny prvky v daném vektoru jsou právě jednoho typu, čímž rozumíme, že je tato struktura tzv. homogenní. Vektor je možné vytvořit mnoha způsoby, mezi nejčastější patří funkce vector(mode = \"numeric\", length = 10) a funkce c(), případně vzniká pomocí opetárorů [ nebo [[.\nS vektory se pojí důležité pravidlo - recyklace hodnot.\n\n\nKód\nv &lt;- c(1.4, 2.0, 6.1, 2.7)\nu &lt;- c(2.0, 1.3)\n1u + v\n2u * v\n3u * 2.3\n\n\n\n1\n\nSčítám vektory přičemž délka jednoho je násobkem délky druhého.\n\n2\n\nNásobím vektory přičemž délka jednoho je násobkem délky druhého.\n\n3\n\nNásobení vektoru číslenou hodnotou\n\n\n\n\n[1] 3.4 3.3 8.1 4.0\n[1]  2.80  2.60 12.20  3.51\n[1] 4.60 2.99\n\n\n\nPráce s vektory\n\n\nKód\n1x &lt;- 1:10\nx &lt;- seq(10:1)\nx &lt;- vector(mode = \"numeric\", length = 10)\nx &lt;- replicate(n = 10, expr = eval(2))\nx &lt;- sample(x = 10, size = 10, replace = TRUE)\nx &lt;- rep(x = 15, times = 2)\nx &lt;- rnorm(n = 10, mean = 2, sd = 20)\n2t(x) * x\n3names(x) &lt;- LETTERS[1:length(x)]\n4x[x &gt; 0]\n5x[1:3]\n\n\n\n1\n\nTvorba vektoru \\(\\boldsymbol{\\mathrm{x}}\\) různými úkony. Použití sekvence, repetice, opakování a vzorkování.\n\n2\n\nTranspozice vektoru.\n\n3\n\nPojmenování pozic ve vektoru\n\n4\n\nVýběr hodnot z vektoru na základě podmínky\n\n5\n\nVýběr hodnot z vektoru na základě pozice\n\n\n\n\n         [,1]     [,2]     [,3]     [,4]     [,5]       [,6]     [,7]     [,8]\n[1,] 418.2779 46.00991 898.1805 66.07044 161.6351 0.08361656 79.08682 24.76843\n         [,9]    [,10]\n[1,] 257.3706 1230.501\n         A          F          H          I          J \n20.4518433  0.2891653  4.9767891 16.0427731 35.0784996 \n         A          B          C \n 20.451843  -6.783061 -29.969659 \n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nVytvořte libovolným způsobem vektor x 10 různých číselných hodnot, kde \\(x\\in\\mathbb{R}\\).\nZapište výraz pro výběr čísel v rozmezí -5 a 5 z tohoto vektoru.\nProveďte převod na celočíselný typ a diskutujte výsledek.\nPřidejte k vektoru 3 pozice “A”, “B” a “C”, změnil se vektor?\n\n\n\n\n\n\n\n4.7.1.2 Faktor\nFaktorem rozumíme kategorickou proměnnou, která je určena výčtem hodnot. Ukážeme si na příkladu “tříd přesnosti měření”.\n\n\nKód\ntrida &lt;- factor(x = 1:4,\n                labels = c(paste(1:4, \". třída\", sep = \"\")), \n                ordered = TRUE)\n\n\n\n\n4.7.1.3 Matice matrix\nRozšířením rozměrů vektoru vznikne matice nebo obecně pole.\n\n\nKód\nx &lt;- c(1:10)\n1dim(x) &lt;- c(2, 5)\nx\n\n\n\n1\n\nPřevod na rozměr \\(2\\times 2\\)\n\n\n\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    3    5    7    9\n[2,]    2    4    6    8   10\n\n\n\n\n\nFunkce\nÚkon\n\n\n\n\nnrow(), ncol()\npočet řádků, sloupců matice\n\n\ndim()\nřádky \\(\\times\\) sloupce matice\n\n\ndet()\ndeteminant matice\n\n\neigen()\nvlastní čísla a vlastní vektory matice\n\n\ncolnames()\njména sloupců v matici\n\n\nrowSums()\nřádkové součty matice\n\n\ncolMeans()\nsloupcové průměry matice\n\n\nM[m, ]\nVýběr \\(m\\)-tého řádku matice\n\n\nM[ ,n]\nVýběr \\(n\\)-tého sloupce matice\n\n\n\nStejně jako u vektoru opět platí typová homogenita\n\n\nKód\nB &lt;- matrix(\n  data = c(1, 2 + 3i, 5.4, 4, 5), \n  nrow = 2, \n  ncol = 3)\n\n\nWarning in matrix(data = c(1, 2 + (0+3i), 5.4, 4, 5), nrow = 2, ncol = 3): data\nlength [5] is not a sub-multiple or multiple of the number of rows [2]\n\n\n\n\nKód\nA &lt;- matrix(data = seq(from = 1, to = 16, by = 2), nrow = 4)\n1str(A)\n2dim(A)\n3svd(A)\n4diag(A)\n# sweep(x = A, MARGIN = 1, STATS = mean)\n##  num [1:4, 1:2] 1 3 5 7 9 11 13 15\n## [1] 4 2\n## $d\n## [1] 25.930394  2.759471\n## \n## $u\n##            [,1]       [,2]\n## [1,] -0.3396065 -0.7646355\n## [2,] -0.4383147 -0.3284512\n## [3,] -0.5370229  0.1077330\n## [4,] -0.6357311  0.5439173\n## \n## $v\n##            [,1]       [,2]\n## [1,] -0.3389761  0.9407950\n## [2,] -0.9407950 -0.3389761\n## \n## [1]  1 11\n\n\n\n1\n\nStruktura objektu\n\n2\n\nDimenze matice\n\n3\n\nSingulární rozklad\n\n4\n\nPrvky na diagonále matice\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nS pomocí nápovědy k funkci rnorm() vytvořte matici \\(\\boldsymbol{\\mathrm{M}}; h(\\boldsymbol{\\mathrm{M}}) = 8\\) náhodných čísel.\nVytvořte vektor hodnot od \\(100\\) do \\(1\\) sestupně, využijte nápovědu k funkci seq().\n\nSpočtěte rozdíl, matic \\(\\boldsymbol{\\mathrm{A}}\\), \\(\\boldsymbol{\\mathrm{B}}\\). \\[\\boldsymbol{\\mathrm{A}} = \\left(\n  \\begin{matrix}\n  2 & 2 & 5\\\\\n  9 & 2 & 7\\\\\n  1 & 3 & 18\\\\\n  \\end{matrix}\n  \\right),\\qquad\n  \\boldsymbol{\\mathrm{B}} = \\left(\n  \\begin{matrix}\n  5 & 4 & 5\\\\\n  -7 & 2 & 4\\\\\n  10 & 1 & 5\\\\\n  \\end{matrix}\n  \\right)\n  \\]\n\nSpočítejte inverzní matici k matici \\(\\boldsymbol{\\mathrm{A}}\\). Najděte vhodnou funkci s pomocí nápovědy.\n\nS pomocí hodnot TRUE/FALSE vytvořte matici \\(\\boldsymbol{\\mathrm{M}}(3,3)\\), změňte typ prvku na pozici \\(\\boldsymbol{\\mathrm{M}}[1, 1]\\) na textový řetězec. Ovlivní tato změna ostatní prvky v matici?\n\nVyřešte s pomocí R soustavu lineárních rovnic: \\[\\begin{array}\n  -3x & +2y& +z&=1\\\\\n  -2x & -y& +z&=2\\\\\n  2x & +y& -4z&=0\n  \\end{array}\n\\]\n\n\n\n\n\n\n\n\n4.7.2 Heterogenní datové struktury\nZa rúznorodé struktury se označují ty, které mohou uchovávat dva a více prvků rozdílného typu současně. Z těch základních to jsou data.frame a list, dále pak S4, nebo R6 třídy, případně další uživatelem vytvořené struktury.\n\n4.7.2.1 Datová tabulka data.frame\ndata.frame je de facto vektor stejně dlouhých vektorů, které kromě toho, že musí být shodné délky, mohou být vzájmeně rozdílného datového typu.\n\n\nKód\nDF &lt;- data.frame(name = letters[1:5], \n                 value = rnorm(5))\nDF\n##   name       value\n## 1    a  1.12780592\n## 2    b  0.40404050\n## 3    c  0.19324584\n## 4    d -0.95829378\n## 5    e  0.04486513\nDF[\"name\"]        # podvýběr do data.frame\n##   name\n## 1    a\n## 2    b\n## 3    c\n## 4    d\n## 5    e\nDF[[\"name\"]]      # podvýběr do vektoru\n## [1] \"a\" \"b\" \"c\" \"d\" \"e\"\nDF[, \"name\"]      # podvýběr do vektoru\n## [1] \"a\" \"b\" \"c\" \"d\" \"e\"\n\n\nPráce uvnitř data.frame\n\n\nKód\nDF &lt;- data.frame(\n  mon = rep(month.abb, \n            times = c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)), \n  value = rnorm(365), \n  yr = 2001)\nstr(DF)\n## 'data.frame':    365 obs. of  3 variables:\n##  $ mon  : chr  \"Jan\" \"Jan\" \"Jan\" \"Jan\" ...\n##  $ value: num  1.0997 -0.7848 -0.0111 -0.4826 -0.6116 ...\n##  $ yr   : num  2001 2001 2001 2001 2001 ...\nnames(DF)\n## [1] \"mon\"   \"value\" \"yr\"\nnrow(DF)\n## [1] 365\nncol(DF)\n## [1] 3"
  },
  {
    "objectID": "02_uvod_do_R_2.html#řídící-struktury",
    "href": "02_uvod_do_R_2.html#řídící-struktury",
    "title": "4  Opakovaní R",
    "section": "4.8 Řídící struktury",
    "text": "4.8 Řídící struktury\nZajišťují obecný průběh programu, tvoří základní prvky algoritmů. Mezi řídící strukury řadíme podmínky a cykly. Mohli bychom přidat i složené závorky, něboť pro struktury uvozují bloky kódu.\n\n4.8.1 Podmínky\n\n4.8.1.1 if()\n\n\nKód\nA &lt;- 1\nif(A &gt;= 1) {\n  cat(\"A je větší nebo shodné s 1.\")\n}\n\n\nA je větší nebo shodné s 1.\n\n\n\n\nKód\nA &lt;- 5\n1if(A &gt;= 2) {\n  cat(\"A je větší nebo shodné s 2.\")\n} else if(A &gt; 2) {\n  cat(\"A je větší než 2.\")\n}\n\n\n\n1\n\nŘetěz podmínek se uzavře v momentě, kdy je výraz v závorce poprvé vyhodnocen jako pravdivý.\n\n\n\n\nA je větší nebo shodné s 2.\n\n\n\n\n4.8.1.2 ifelse()\nVektorizovaný tvar podmínky, který lze volat na prvky struktur.\n\n\nKód\nx &lt;- -5:5\ncat(\"Prvek x + 3 je více než 0: \", ifelse(x - 3 &gt; 0, yes = \"Ano\", no = \"Ne\"))\n\n\nPrvek x + 3 je více než 0:  Ne Ne Ne Ne Ne Ne Ne Ne Ne Ano Ano\n\n\n\n\n4.8.1.3 switch()\n\n\nKód\nvarianta &lt;- \"B\"\n2 * (switch(\n      varianta,\n1        \"A\" = 2,\n2        \"B\" = 3))\n\n\n\n1\n\nVarianta “A nenastala,\n\n2\n\nnastala varianta “B”, tzn. výraz je vyhodnocen ve tvaru \\(2\\cdot 3 = 6\\)\n\n\n\n\n[1] 6\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nVytvořte s pomocí podmínek známkovací schéma:\n\n\n\n\n\nZnámka\nRozmezí\n\n\n\n\n1\n90 - 100 %\n\n\n2\n75 - 89 %\n\n\n3\n60 - 74 %\n\n\n4\n&lt; 60 %\n\n\n\n\n\n\n\n\n4.8.2 Cykly\nZajištují, že se část kódu provede opakovaně.\n\n4.8.2.1 for() z definovaného rozsahu\nPokud je předem znám počet opakování cyklu (nebo je i jinak implicitně určen), používá se for cyklu.\n\n\nKód\nfor(i in 1:4) {\n  cat(\"Iterace \", i, \"\\n\")\n}\n\n\nIterace  1 \nIterace  2 \nIterace  3 \nIterace  4 \n\n\n\n\n4.8.2.2 while() s pomocí podmínky\nV případech, kdy počet opakování není předem znám, ale je známa podmínka, za které cyklus má probíhat.\n\n\nKód\ni &lt;- 1\nwhile(i &lt; 5) {\n  cat(\"Iterace \", i, \"\\n\")\n  i &lt;- i + 1\n}\n\n\nIterace  1 \nIterace  2 \nIterace  3 \nIterace  4 \n\n\n\n\n4.8.2.3 repeat s únikovou sekvencí\nPočet opakování neni předem znám. Nicméně lze definovat případ, kdy má cyklus skončit.\n\n\nKód\ni &lt;- 1\n1repeat {\n  cat(\"Iterace \", i, \"\\n\")\n  i &lt;- i + 1\n2  if(i &gt;= 5) break #&lt;1&gt;\n}\n\n\n\n1\n\nProváděj\n\n2\n\nVnořenou podmínkou následovanou klíčovým slovem break definujeme konec cyklu.\n\n\n\n\nIterace  1 \nIterace  2 \nIterace  3 \nIterace  4 \n\n\nKromě únikového klíčového slova break po němž cyklus okamžitě skončí je k využití příkaz next, po němž se zbytek příkazů v dané iteraci přeskočí a operátor %||%.\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nVytvořte cyklus, který pro čísla \\(1, 2, 3, 4, 5\\) vypíše jejich třetí mocniny\nPro stejná čísla provede kumulativní součet.\nPro číslo n provede výpočet faktorialu.\nS pomocí funkce readline() od uživatele požaduje číslo, které vždy vypíše. Pokud je číslo záporné, skončí smyčku."
  },
  {
    "objectID": "02_uvod_do_R_2.html#vlastní-funkce",
    "href": "02_uvod_do_R_2.html#vlastní-funkce",
    "title": "4  Opakovaní R",
    "section": "4.9 Vlastní funkce",
    "text": "4.9 Vlastní funkce\nK funkce slouží klíčové slovo function, které v závorkách doprovází argumenty sloužící k vnitřní specifikaci funkce.\n\n\nKód\nx &lt;- rnorm(100)\n1nejblizsi_hodnota &lt;- function(x, value) {\n  x[which(abs(x - value) == min(abs(x - value)))]\n}\n\ncat(\"Hodnota nejblíže 0 z vektoru x je:\" , \n    nejblizsi_hodnota(x = x, value = 0))\n\n\n\n1\n\nPříklad funkce, která vyhledá nejbližší z hodnot vektoru x k referenční hodnotě value.\n\n\n\n\nHodnota nejblíže 0 z vektoru x je: -0.001569647"
  },
  {
    "objectID": "02_uvod_do_R_2.html#rekapitulace",
    "href": "02_uvod_do_R_2.html#rekapitulace",
    "title": "4  Opakovaní R",
    "section": "4.10 Rekapitulace",
    "text": "4.10 Rekapitulace\nVyplňte následující formulář bez použití R.\n\n\nZvolte platné tvrzení pro data.frame:\n\n Počet sloupců i řádků musí být shodný Proměnnná musí mít uvedenou hodnotu v každém řádku Všechny proměnné musí být stejného typu\n\nMatici je možné vytvořit z vektoru přidáním dimenze: TRUEFALSE\n\nCo je výsledkem výrazu: \\(\\sin(\\frac{0}{0})\\) \n\nVyberte, platné tvrzení pro list:\n\n Počet sloupců i řádků musí být shodný Proměnnná musí mít uvedenou hodnotu v každém řádku Všechny proměnné musí být stejného typu Je možné do něj rekurzivně vniřit další objekt typu list\n\nNapište výraz pro nepřiřazenou číselnou hodnotu : \n\nDolňte chybějící zápis cyklu: \n\n\n  for(i in 1:5) {\n    cat(___)    \n  }\n  &gt; 54321"
  },
  {
    "objectID": "03_grafy.html#jednorozměrná-data",
    "href": "03_grafy.html#jednorozměrná-data",
    "title": "5  Grafický výstup",
    "section": "5.1 Jednorozměrná data",
    "text": "5.1 Jednorozměrná data\nJednorozměrná data nejčastěji kreslíme pomocí boxplotu, histogramu a sloupcového grafu.\n\n\nKód\n1par(mfrow = c(1, 3))\n2boxplot(dfr$Y)\nhist(dfr$Y)\nbarplot(dfr$Y)\n\n\n\n1\n\nRozdělení grafického okna na tři sloupce (viz níže).\n\n2\n\nFunkce pro jednorozměrné grafy v základní parametrizaci.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nPodívejte se na oba krajní grafy předchozího výstupu a popište, rozdíl mezi histogramem a sloupcovým grafem.\nPodívejte se do nápovědy k funkci hist() a doplňte následující kód tak, aby koše měly hranice od \\(-4\\) do \\(4\\) s krokem \\(0,5\\). hist(dfr$Y, breaks =  )"
  },
  {
    "objectID": "03_grafy.html#funkce-curve",
    "href": "03_grafy.html#funkce-curve",
    "title": "5  Grafický výstup",
    "section": "5.2 Funkce curve()",
    "text": "5.2 Funkce curve()\nCurve je funkce, která se uplatní při tvorbě symbolických grafů matematických funkcí, kdy není třeba parametrizovat argument x. Další argumenty ?par jsou stejné jako u plot().\n\n\nKód\ncurve(expr = tanh(x),\n      from = -pi, \n      to = pi)\ncurve(expr = tanh(2*x),\n      from = -pi, \n      to = pi, \n      add = TRUE)"
  },
  {
    "objectID": "03_grafy.html#funkce-plot",
    "href": "03_grafy.html#funkce-plot",
    "title": "5  Grafický výstup",
    "section": "5.3 Funkce plot()",
    "text": "5.3 Funkce plot()\nplot(x, y, ...) je základní S3 generická funkce, jejíž metody umožňují použití na široké množství objektů. Začneme s použitím na vektor z datasetu dfr.\n\n\nKód\n1plot(dfr$X, dfr$Y)\n\n\n\n1\n\nFunkce má věšinu svých argumentů parametrizovaných v přednastavenými hodnotami, nebo hodnotami novodvozenými od parametru. Vidíme tak, že osa \\(y\\) je pojmenována po vstupním parametru.\n\n\n\n\n\n\n\n\n\n\n\nZkusíme více parametrizovat výstup a\n\n\nKód\n1plot(x = dfr$X,\n     y = dfr$Y,\n2     type = \"b\",\n3     col = \"gray10\",\n4     pch = 21,\n5     bg = \"#4a6777\",\n6     ylim = c(-abs(1.25 * min(dfr$Y)),\n              1.25 * max(dfr$Y)),\n7     xlab = \"\",\n     ylab = \"Value\",\n8     main = \"Y~X vztah\",\n9     sub = Sys.Date())\n10legend(x = \"topright\",\n11       fill = \"#4a6777\",\n12       pch = 21,\n13       legend = c(\"Y\"),\n14       box.col = NA,\n15       lty = 1,\n16       col = \"gray10\")\n\n\n\n1\n\nZákladní proměnné \\(X\\) a \\(Y\\) pro typ grafu.\n\n2\n\nVolba typu grafu \"b\" označuje body protnuté spojnicí.\n\n3\n\nVolba barvy popředí znaku bod/přímka.\n\n4\n\nVolba charakteru bodového znaku.\n\n5\n\nVolba barvy pozadí znaku umožňujícího výplň - bod.\n\n6\n\nZměna rozsahu osy \\(y\\).\n\n7\n\nZměna názvu os.\n\n8\n\nZnění hlavního nadpisu.\n\n9\n\nPodnadpis dtto.\n\n10\n\nPokračujeme nastavením umístění legendy.\n\n11\n\nVýplň prvku v legendě.\n\n12\n\nTyp prvku v legendě.\n\n13\n\nNázev prvku v legendě.\n\n14\n\nVolba barvy ohraničení legendy\n\n15\n\nVolba typu spojnice (1 = plná čára)\n\n16\n\nVolba barvy popředí prvku legendy\n\n\n\n\n\n\n\n\n\n\n\nU funkcí, do kterých vstupuje více proměnných z jednoho datasetu je možné z důvodu přehledonosti použít obalovací funkci with(), s níž pak není třeba provádět opakovaně podvýběr.\n\n\nKód\n1with(data = dfr,\n2     expr = {\n       plot(x = X, y = Y)\n       lines(x = X, y = Y)\n       }\n     ) \n\n\n\n1\n\nFunkce with() umožňuje zavolání funkce uvedené v arugmentu expr na proměnných v data.frame. Odpadá opakované psaní prefixu datové sady (zde dfr$___)\n\n2\n\nArgument expr může obsahovat i blok kódu {...}, jako je tomu v tomto případě."
  },
  {
    "objectID": "03_grafy.html#volba-barev",
    "href": "03_grafy.html#volba-barev",
    "title": "5  Grafický výstup",
    "section": "5.4 Volba barev",
    "text": "5.4 Volba barev\nBarvy je možné aplikovat na všechny prvrky grafu. Buď je možné psát barvy dle názvů, například \"white\", \"orange\" použít funkci rgb() a nebo hexadecimální zápis \"#FFF000\". Výpis všech předdefinovaných barev1 lze získat příkazem colors().\n\n\nKód\ncolors()[1:10]\n\n\n [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n [5] \"antiquewhite2\" \"antiquewhite3\" \"antiquewhite4\" \"aquamarine\"   \n [9] \"aquamarine1\"   \"aquamarine2\"  \n\n\n\n5.4.1 Palety a RColorBrewer\nSoučástí základní sady je sada palet a balík RColorBrewer.\n\n\nKód\nRColorBrewer::display.brewer.all()\n\n\n\n\n\n\n\n\n\nK vytvoření palety (vektoru) barev pak žádáme \\(n\\) barev z předdefinovaného jmenného rozsahu.\n\n\nKód\nRColorBrewer::brewer.pal(n = 100, name = \"RdBu\")\n\n\nWarning in RColorBrewer::brewer.pal(n = 100, name = \"RdBu\"): n too large, allowed maximum for palette RdBu is 11\nReturning the palette you asked for with that many colors\n\n\n [1] \"#67001F\" \"#B2182B\" \"#D6604D\" \"#F4A582\" \"#FDDBC7\" \"#F7F7F7\" \"#D1E5F0\"\n [8] \"#92C5DE\" \"#4393C3\" \"#2166AC\" \"#053061\"\n\n\nKód\nrbind(\n  rainbow = rainbow(10),\n  heat.colors = heat.colors(10),\n  cm.colors = cm.colors(10),\n  blues9\n)\n\n\nWarning in rbind(rainbow = rainbow(10), heat.colors = heat.colors(10),\ncm.colors = cm.colors(10), : number of columns of result is not a multiple of\nvector length (arg 4)\n\n\n            [,1]      [,2]      [,3]      [,4]      [,5]      [,6]     \nrainbow     \"#FF0000\" \"#FF9900\" \"#CCFF00\" \"#33FF00\" \"#00FF66\" \"#00FFFF\"\nheat.colors \"#FF0000\" \"#FF2400\" \"#FF4900\" \"#FF6D00\" \"#FF9200\" \"#FFB600\"\ncm.colors   \"#80FFFF\" \"#99FFFF\" \"#B3FFFF\" \"#CCFFFF\" \"#E6FFFF\" \"#FFE6FF\"\nblues9      \"#F7FBFF\" \"#DEEBF7\" \"#C6DBEF\" \"#9ECAE1\" \"#6BAED6\" \"#4292C6\"\n            [,7]      [,8]      [,9]      [,10]    \nrainbow     \"#0066FF\" \"#3300FF\" \"#CC00FF\" \"#FF0099\"\nheat.colors \"#FFDB00\" \"#FFFF00\" \"#FFFF40\" \"#FFFFBF\"\ncm.colors   \"#FFCCFF\" \"#FFB3FF\" \"#FF99FF\" \"#FF80FF\"\nblues9      \"#2171B5\" \"#08519C\" \"#08306B\" \"#F7FBFF\"\n\n\n\n\nKód\npalette.pals()\n\n\n [1] \"R3\"              \"R4\"              \"ggplot2\"         \"Okabe-Ito\"      \n [5] \"Accent\"          \"Dark 2\"          \"Paired\"          \"Pastel 1\"       \n [9] \"Pastel 2\"        \"Set 1\"           \"Set 2\"           \"Set 3\"          \n[13] \"Tableau 10\"      \"Classic Tableau\" \"Polychrome 36\"   \"Alphabet\"       \n\n\nKód\npalette.colors(palette = \"Okabe-Ito\")\n\n\n[1] \"#000000\" \"#E69F00\" \"#56B4E9\" \"#009E73\" \"#F0E442\" \"#0072B2\" \"#D55E00\"\n[8] \"#CC79A7\" \"#999999\"\n\n\n\n\nKód\nfcol &lt;- colorRampPalette(colors = c(\"black\", \"white\"))\npalette(\"Classic Tableau\")\n\n\n\n\n\n\n\n\nPoznámka\n\n\n\nSprávná volba barev v grafech odborných publikací je velmi důležitá. V ideálním případě by grafické škály měly být stejné čitelné jak pro lidi s poruchou barevného spektra, tak v černobílem tisku. Obojí je řešeno například pomocí balíčku scico Pedersen a Crameri (2021). Ve zkratce je problematika vysvětlena například ve vignette balíčku viridis.\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nnásledujícím příkladu vytvoříte graf Budykovy křivky.\nPostup:\n\n\nNahrajte do prostředí data ze souboru ./data/budyko_dfr. \n\nZačněte tvorbu grafu s funkcí plot.new() \n\nNejjednodušší vztah popsal Schreiber v roce 1902 \n\\[\n  \\dfrac{\\textrm{Ea}}{\\textrm{P}_a} = 1-\\exp(-\\phi)\n\\]\nVytvořte posloupnost od \\(0\\) do \\(2\\) s krokem \\(10e^{-3}\\) a uložte do proměnné phi.\n\nPro posloupnost phi spočítejte Schreiberovu rovnici a uložte do schreiber.\nS pomocí následujícího příkazu vytvořte barevné schéma paleta &lt;- rev(rainbow(20, start = 0, end = 0.6))\nVyneste body x = budyko_dfr$PET_over_P a y = budyko_dfr$ET_over_P.\nNastavte xlab = \"Ep/P\", ylab = \"P/Er\", xlim v rozsahu \\(\\phi\\) a ylim od \\(0\\) do \\(1,2\\). \n\nVyneste do plotu liniové segmenty \\((0;0)\\) – \\((1;1)\\) a \\((1;1)\\) – \\((2;1)\\).\nFunkcí grid() přidejte tečkovanou mřížku.\n\n\nPokuste se výsledkem přiblížit následovnému grafu, použijte nápovědy:"
  },
  {
    "objectID": "03_grafy.html#matematická-sazba-v-grafech",
    "href": "03_grafy.html#matematická-sazba-v-grafech",
    "title": "5  Grafický výstup",
    "section": "5.5 Matematická sazba v grafech",
    "text": "5.5 Matematická sazba v grafech\nDá se použít v místě textu, nadpisu nebo jiného popisku.\n?plotmath demo(plotmath)\n\n\nKód\nplot(x = dfr$X, \n     y = dfr$X^2, \n     main = expression(paste(\"graf \", y == x^2)), \n     ylab = expression(paste(y == x^2)))"
  },
  {
    "objectID": "03_grafy.html#layout",
    "href": "03_grafy.html#layout",
    "title": "5  Grafický výstup",
    "section": "5.6 Layout",
    "text": "5.6 Layout\nJednoduchý pravidelný layout můžeme vytvořit změnou parametrů okna grafického výstupu pomocí funkce par()\n\n5.6.1 Sazba pomocí par()\n\n\nKód\n1par(mfrow = c(1, 2))\n2hist(dfr$X, main = \"X\", xlab = \"\")\nhist(dfr$Y, main = \"Y\", xlab = \"\")\n\n\n\n1\n\nOkno výstupu rozdělíme do dvou sloupců na jednom řádku.\n\n2\n\nPosléze voláme dva grafy, které postupně vyplní pole v daném okně.\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.6.2 Sazba do matice s funkcí layout()\n\n\nKód\npar(cex = 2)\nlayout.show(\n  layout(\n    mat = matrix(\n1      data = c(2, 2, 0,\n               1, 1, 3,\n               1, 1, 3),\n      nrow = 3, \n      ncol = 3, \n      byrow = TRUE))\n)\n\n\n\n1\n\nZde sdělujeme, že celkově bude pole rozděleno v poměru \\(3\\times 3\\) a \\(4\\over9\\) (levá dolní část) vyplní 1. graf.\n\n\n\n\n\n\n\n\n\n\n\nNyní vynecháme layout.show(), zavolámem jen layout() a postupně přiřadíme grafy k jednotlivým polím.\n\n\nKód\nlayout(\n    mat = matrix(\n      data = c(2, 2, 0,\n               1, 1, 3,\n               1, 1, 3), \n      nrow = 3, \n      ncol = 3, \n      byrow = TRUE))\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nVytvořte layout dle následujícího nákresu a vyplňte libovolnými rúznými typy grafů."
  },
  {
    "objectID": "03_grafy.html#uložení-do-souboru",
    "href": "03_grafy.html#uložení-do-souboru",
    "title": "5  Grafický výstup",
    "section": "5.7 Uložení do souboru",
    "text": "5.7 Uložení do souboru\nGrafy je možné uložit externě, at už prostřednictvím dialogu v Plots &gt; Export, nebo přímo ve skriptu. Formát lze volit mezi rastrovými *.png, *.jpeg, *.tiff, *.bmp, či vektorovými *.eps, *.svg, *.pdf.\n\n\nKód\npng(\"./budyko_kompozit.png\", \n    width = 8, \n    height = 6, \n    units = \"px\", \n    res = 300)\n1...\ndev.off()\n\n\n\n1\n\nStandardním způsobem vytvořený diagram či layout.\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nVytvořte poslouponost t &lt;- seq(from = 2010, to = 2020, length = 200)) a potom do stejného grafu vyneste \\(\\sin(2\\pi(t - 1))\\) a \\(\\cos^2(2\\pi t)\\).\nVytvořte layout ze 4. úlohy a uložte předchozí graf a dva další do souboru s pomocí funkce pdf(). Využijte naápovědy.\n\n\n\n\n\n\n\n\nPedersen, Thomas Lin, a Fabio Crameri. 2021. „Package ’scico’\"."
  },
  {
    "objectID": "03_grafy.html#footnotes",
    "href": "03_grafy.html#footnotes",
    "title": "5  Grafický výstup",
    "section": "",
    "text": "Předdefinovaných barev je celkem 657.↩︎"
  },
  {
    "objectID": "04_popisna.html#sec-popisna-importdat",
    "href": "04_popisna.html#sec-popisna-importdat",
    "title": "6  Popisná statistika",
    "section": "6.1 Import dat",
    "text": "6.1 Import dat\nV hydrologii pracujeme s datovými sadami, které mají rúznou podobu. Nejběžnějším výměnným formát jsou stále obecné *.xls/*.xlsx, *.txt, *.csv (comma separated values). S pomocí těchto formátů jsou často katalogizována data z automatických měření. Dále méně časté formáty *.json (javascript object notation), *.shp (shapefile), *.laz, *.nc (NetCDF file), *.parquet (Apache parqet). A jako poslední doménově specifické *.RData, nebo *.rds. Formátů je velké množství, nicméně je velmi obtížné narazit na některý, pro který neexistuje v R možnost importu ať už v základní konfiguraci nebo s pomocí externích balíčků.\nV RStudio se nachází poměrně propracovaný průvodce importem dat, který naklikneme pod záložkou Environment &gt; Import Dataset.\n\n\n\n\n\n\n\nKód\nglobal_temperatures &lt;- read.csv(file = \"./data/JonesGlobalT.csv\", \n                                row.names = 1)\nhead(x = global_temperatures, n = 5)\n\n\n  YEAR    JAN    FEB    MAR    APR    MAY    JUN    JUL    AUG    SEP    OCT\n1 1850 -0.702 -0.284 -0.732 -0.570 -0.325 -0.213 -0.128 -0.233 -0.444 -0.452\n2 1851 -0.303 -0.362 -0.485 -0.445 -0.302 -0.189 -0.215 -0.153 -0.108 -0.063\n3 1852 -0.308 -0.477 -0.505 -0.559 -0.209 -0.038 -0.016 -0.195 -0.125 -0.216\n4 1853 -0.177 -0.330 -0.318 -0.352 -0.268 -0.179 -0.059 -0.148 -0.409 -0.359\n5 1854 -0.360 -0.280 -0.284 -0.349 -0.230 -0.215 -0.228 -0.163 -0.115 -0.188\n     NOV    DEC ANNUAL\n1 -0.190 -0.268 -0.375\n2 -0.030 -0.067 -0.223\n3 -0.187  0.083 -0.224\n4 -0.256 -0.444 -0.271\n5 -0.369 -0.232 -0.246\n\n\n\n\nKód\n1global_temperature_yr &lt;- aggregate(x = . ~ YEAR,\n                                   FUN = mean,\n                                   data = global_temperatures)\nhead(x = global_temperature_yr, n = 5)\n\n\n\n1\n\nAgregace dat do průměrů za roční období.\n\n\n\n\n  YEAR    JAN    FEB    MAR    APR    MAY    JUN    JUL    AUG    SEP    OCT\n1 1850 -0.702 -0.284 -0.732 -0.570 -0.325 -0.213 -0.128 -0.233 -0.444 -0.452\n2 1851 -0.303 -0.362 -0.485 -0.445 -0.302 -0.189 -0.215 -0.153 -0.108 -0.063\n3 1852 -0.308 -0.477 -0.505 -0.559 -0.209 -0.038 -0.016 -0.195 -0.125 -0.216\n4 1853 -0.177 -0.330 -0.318 -0.352 -0.268 -0.179 -0.059 -0.148 -0.409 -0.359\n5 1854 -0.360 -0.280 -0.284 -0.349 -0.230 -0.215 -0.228 -0.163 -0.115 -0.188\n     NOV    DEC ANNUAL\n1 -0.190 -0.268 -0.375\n2 -0.030 -0.067 -0.223\n3 -0.187  0.083 -0.224\n4 -0.256 -0.444 -0.271\n5 -0.369 -0.232 -0.246\n\n\n\n\nKód\npar(mfrow = c(1, 2))\nwith(data = global_temperature_yr, expr = plot(YEAR, JAN, type = \"l\"))\nwith(data = global_temperature_yr, \n     expr = boxplot(ANNUAL, horizontal = TRUE))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nNahrajte data do prostředí s pomocí vhodně parametrizované read.___() funkce.\n\nDoplňte hydrologický rok.\n\nProveďte agregaci dat průměrem pro jednotlivé měsíce.\n\nVyneste do grafu pomocí funkce plot()."
  },
  {
    "objectID": "04_popisna.html#sec-popisna-statistickysoubor",
    "href": "04_popisna.html#sec-popisna-statistickysoubor",
    "title": "6  Popisná statistika",
    "section": "6.2 Statistický soubor",
    "text": "6.2 Statistický soubor\nJe základní jednotkou popisné statistiky, skládá se z množiny všech objektů, které jsou nositely určitého znaku.\n\n6.2.1 Základní soubor (populace)\nSoubor všech jedinců, u nichž být zaznamenán výskyt sledovaného znaku.\n\n\n\n\n\n6.2.2 Výběrový soubor (výběr)\nJe soubor o konečném počtu \\(n\\) prvků základního souboru, u kterého je prováděno měření charakteristik.\nVýběrový soubor vzniká realizací náhodného výběru.\nNíže uvedené funkce jsou počítané s pomocí následujícího vektoru\n\n\nKód\nset.seed(1)\nx &lt;- round(rnorm(50), 4)\nx\n##  [1] -0.6265  0.1836 -0.8356  1.5953  0.3295 -0.8205  0.4874  0.7383  0.5758\n## [10] -0.3054  1.5118  0.3898 -0.6212 -2.2147  1.1249 -0.0449 -0.0162  0.9438\n## [19]  0.8212  0.5939  0.9190  0.7821  0.0746 -1.9894  0.6198 -0.0561 -0.1558\n## [28] -1.4708 -0.4782  0.4179  1.3587 -0.1028  0.3877 -0.0538 -1.3771 -0.4150\n## [37] -0.3943 -0.0593  1.1000  0.7632 -0.1645 -0.2534  0.6970  0.5567 -0.6888\n## [46] -0.7075  0.3646  0.7685 -0.1123  0.8811"
  },
  {
    "objectID": "04_popisna.html#míry-polohy",
    "href": "04_popisna.html#míry-polohy",
    "title": "6  Popisná statistika",
    "section": "6.3 Míry polohy",
    "text": "6.3 Míry polohy\nPro obě extrémní polohy (\\(\\min\\) a \\(\\max\\)) jsou v R stejnojmenné funkce.\n\n\n\n\n\n\n\n\nNázev\nFunkce\nVzorec\n\n\n\n\nminimum/maximum\nmin(x)/max(x))\n\\(\\max(x) - \\min(x)\\)\n\n\nvýběrový kvantil\nquantile(x)\n-\n\n\naritmetický průměr\nmean(x)\n\\(\\dfrac{1}{n}\\sum_{i=1}^{n}x_i\\)\n\n\nmedián\nmedian(x)\n-\n\n\nmodus\n-\n-\n\n\n\n\n6.3.1 Výběrový kvantil\n\n\nKód\n1t(sapply(X = 1:7, FUN = function(i) quantile(x, type = i)))\n\n\n\n1\n\nVyužití anonymní funkce function(i) vektorizované pro rozsah hodnot 1:7 na pozici type ve funkci quantile()\n\n\n\n\n          0%       25%    50%      75%   100%\n[1,] -2.2147 -0.394300 0.0746 0.738300 1.5953\n[2,] -2.2147 -0.394300 0.1291 0.738300 1.5953\n[3,] -2.2147 -0.415000 0.0746 0.738300 1.5953\n[4,] -2.2147 -0.404650 0.0746 0.717650 1.5953\n[5,] -2.2147 -0.394300 0.1291 0.738300 1.5953\n[6,] -2.2147 -0.399475 0.1291 0.744525 1.5953\n[7,] -2.2147 -0.372075 0.1291 0.727975 1.5953\n\n\n\n6.3.1.1 Medián\nAritmetický průměr hodnot na pozicích \\(\\frac{n}{2}\\) a \\(\\frac{n}{2+1}\\) v seřazeném souboru.\n\n\n\n6.3.2 Modus\nZa modus se označuje nejčastěji se vyskytující hodnota v souboru. Četnost výskytu hodnot na reálné ose se nahrazuje buďto hustotou (funkce density()) nebo je možné použít kombinaci funkcí cut() a table().\n\n\nKód\n1table(round(x = x, digits = 0))\n2table(cut(x, breaks = 10))\n3dens &lt;- density(x = x)\nmax_dens &lt;- which.max(dens$y)\nplot(dens, main = \"Jádrový odhad hustoty x\")\nsegments(x0 = dens$x[max_dens], \n         y0 = 0, \n         x1 = dens$x[max_dens], \n         y1 = dens$y[max_dens], \n         lwd = 1.5)\n\n\n\n1\n\nFunkce table() provede součty speficikovaných hodnot. V tomto případě po zaokrouhlení na celá čísla.\n\n2\n\nNyní s pomocí funkce cut() rozlišíme četnosti do 10 intervalů a následně spočteme počet hodnot v těchto intervalech.\n\n3\n\nJádrový odhad hustoty. \\[\n  \\hat{f}(x)=\\dfrac{1}{nh}\\sum_{i=1}^{n}\\mathsf{K}\\left(\\dfrac{x-x_i}{h}\\right)\n\\] kde \\(\\mathsf{K}\\) je jádrová funkce, \\(h\\) je šířka pásma (zhlazovací funkce) a \\(x_i\\) jsou hodnoty.\n\n\n\n\n\n\n\n\n\n\n\n\n-2 -1  0  1  2 \n 2  8 22 16  2 \n\n (-2.22,-1.83]  (-1.83,-1.45]  (-1.45,-1.07] (-1.07,-0.691] (-0.691,-0.31] \n             2              1              1              3              6 \n(-0.31,0.0713] (0.0713,0.452]  (0.452,0.833]   (0.833,1.21]     (1.21,1.6] \n            11              7             11              5              3 \n\n\n\n\n6.3.3 Harmonický průměr\nAritmetický průměr převrácených hodnot.\n\\[\n\\bar{x_h} = \\dfrac{n}{\\sum\\limits_{i=1}^{n}\\frac{1}{x_i}}\n\\]\n\n\n6.3.4 Průměr stupně \\(\\alpha\\)\nOznačuje obecný vzorec průměru (zahrnující aritmetický, harmonický, geometrický apod.)\n\\[\n\\bar{x}_\\alpha(x_1, x_2, \\ldots, x_n) = \\left(\\dfrac{1}{n}\\sum_{i=1}^{n}x_i^\\alpha\\right)^\\frac{1}{\\alpha}\n\\]\n\n\nKód\n1min(x)\nmax(x)\n2max(x) - min(x)\nrange(x)\n## [1] -2.2147\n## [1] 1.5953\n## [1] 3.81\n## [1] -2.2147  1.5953\n\n\n\n1\n\nStatistiky minimum & maximum\n\n2\n\nRozpětí\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nNapište funkci pro výpočet obecného vzorce průměru \\(\\alpha\\) a srovnejte s výstupem funkce mean."
  },
  {
    "objectID": "04_popisna.html#míry-variability",
    "href": "04_popisna.html#míry-variability",
    "title": "6  Popisná statistika",
    "section": "6.4 Míry variability",
    "text": "6.4 Míry variability\nVýběrový rozptyl a směrodatnou odchylku spočteme v R pomocí funkcí var() (variance) a sd() standard deviation. Zatímco variační rozpětí popisuje rozpětí celého souboru, mezikvartilové rozpětí se omezuje na rozpětí poloviny hodnot, omezené \\(Q3\\) a \\(Q1\\) neboli \\(q_{75}\\) a \\(q_{25}\\).\n\n\n\n\n\n\n\n\nNázev\nFunkce\nVzorec\n\n\n\n\nrozptyl\nvar(x)\n\\(\\sum\\limits_{i=1}^{n}\\dfrac{(x_i - \\bar{x})^2}{n-1}\\)\n\n\nsměrodatná odchylka\nsd(x)\n\\(\\dfrac{1}{n-1}\\sum\\limits_{i=1}^{n}\\sqrt{(x_i - \\bar{x})^2}\\)\n\n\nvariační rozpětí\nrange(x)\n\\(\\max(x) - \\min(x)\\)\n\n\nmezikvartilové rozpětí\nIQR(x)\n\\(\\mathrm{Q}3 - \\mathrm{Q}_1\\)\n\n\nvariační koeficient\nmean(x)/sd(x)\n\\(\\dfrac{s_x}{\\bar{x}}\\)\n\n\n\n\n6.4.1 Střední chyba aritmetického průměru\n\\[\ns_x = \\dfrac{s}{\\sqrt{n}}\n\\]\n\n\n6.4.2 fivenum() & summary()\nPokud nás nezajímá pouze konkrétní statistika, jsou k dispozici funkce vracející více hodnot najednou.\n\n\nKód\nfivenum(x)\n\n\n[1] -2.2147 -0.3943  0.1291  0.7383  1.5953\n\n\nKód\nsummary(x)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-2.2147 -0.3721  0.1291  0.1004  0.7280  1.5953 \n\n\n\n\n\n\n\n\nPoznámka\n\n\n\nFunkce summary() je tzv. S3 generic, to znamená, že její chování je definované v závislosti na objekt, na který je volána. Podívejte se na výstup methods(summary). Pokud volána funkci na numerický vektor, tak je vybrána metoda summary.numeric()."
  },
  {
    "objectID": "04_popisna.html#rekapitulace",
    "href": "04_popisna.html#rekapitulace",
    "title": "6  Popisná statistika",
    "section": "6.5 Rekapitulace",
    "text": "6.5 Rekapitulace\n\nMáte vektor hodnot: \\(0.64\\), \\(0.98\\), \\(-0.49\\), \\(0.75\\), \\(-1.35\\), \\(1.65\\), \\(1.12\\), \\(-1.04\\), \\(1.05\\), \\(0.29\\), \\(-0.6\\), \\(-0.08\\), \\(1.45\\), \\(-1.87\\), \\(-0.07\\), \\(-0.02\\), \\(0.62\\), \\(0.01\\), \\(-0.26\\). Nalezněte s pomocí R:\n\n\n\nprůměr  \n\n\\(q_{10\\textrm{p}}\\)  \n\nmedián .  \n\n\n\nDoplňte funkci read.___() aby výsledek byl\nZ datové sady vyberte sloupce"
  },
  {
    "objectID": "05_rozdeleni.html#funkce-rozdělení",
    "href": "05_rozdeleni.html#funkce-rozdělení",
    "title": "7  Rozdělení pravděpodobnosti",
    "section": "7.1 Funkce rozdělení",
    "text": "7.1 Funkce rozdělení\nPro práci s rozděleními jsou k dispozici obecně tři funkce:\n\n\nKód\nr___() # generování náhodných čísel z rozdělení\nd___() # funkce hustoty rozdělení\np___() # Pravděpodobnostní funkce \nq___() # Kvantilová funkce rozdělení\n\n\nPro úplnost jsou zde uvedeny funkce pro permutace factorial() a kombinace choose().\n\n\nKód\npar(mfrow = c(1,2))\nplot(x = 0:6, \n1     y = factorial(0:6),\n     type = \"s\",\n     main = \"Permutace\", \n     ylab = bquote(\"log(0!:6!)\"), \n     xlab = \"\",\n     log = \"y\")\nplot(x = 0:6, \n2     y = choose(6, 0:6),\n     type = \"s\", \n     xlab = \"\",\n     main = \"Binomické koeficienty\")\n\n\n\n1\n\nKolika způsoby je možné seřadit \\(n\\leq6\\) prvků?\n\n2\n\nKolika způsoby lze vybrat \\(n-\\)tici z \\(6\\) prvků?\n\n\n\n\n\n\n\n\n\n\n\n\n7.1.1 Distribuční funkce rozdělení\nRozdělení pravděpodobnosti náhodné veličiny lze jednoznačně popsat tzv. distribuční funkcí Rovnice 7.1.\n\\[\nF(x) = P(X\\leq x) = P(\\omega_i\\in\\Omega : X(\\omega_i)\\leq x)\n\\tag{7.1}\\]\n\n7.1.1.1 Empirická distribuční funkce\nSestavuje se na základě sesbíraného vzorku dat, sděluje jak velký podíl dat je stejných nebo menších než konkrétní hodnota. K jejímu vytvoření potřebujeme data seřazená.\n\n\nKód\nQd &lt;- read.fwf(file = \"./data/01138000.dly\",\n               widths = c(8, rep(10, times = 5)))[, 5]\n\n\n\\[\nP(X\\leq x_k) \\approx \\dfrac{k - 0.3}{n + 0.4}\n\\] kde \\(k\\) je pořadí v seřazeném souboru a \\(n\\) je počet prvků v souboru.\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nNahrajte data.  \n\nVytvořte vektor pořadí hodnot.  \nSpočítejte pravděpodobnosti.  \nVyneste do grafu.  \n\nProveďte s pomocí funkce ecdf().\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.1.2 Kvantilová funkce\nKvantilová funkce je inverzní funkcí k distribuční. Pokud distribuční funkce udává s jakou pravděpodobností bude hodnota náhodného pokusu menší nebo rovna \\(x\\), kvantilová funkce udává, pro jaké \\(x\\) bude výsledek náhodného pokusu s danou pravděpodobností \\(y\\) měnší nebo roven \\(x\\).\n\n\nKód\n1qnorm(p = 0.8, mean = 2, sd = 1)\n\n\n\n1\n\nS \\(80\\%\\) pravděpodobností bude hodnota $$2.8416212.\n\n\n\n\n[1] 2.841621\n\n\n\n\n7.1.3 Náhodná čísla z rozdělení\nPro generování náhodných čísel lze použít rozdělení.\n\n\nKód\n1runif(n = 10, min = 0, max = 1)\n2rpois(n = 15, lambda = 2.4)\n\n\n\n1\n\nGenerování 10 čísel z rovnoměrného rozdělení z intervalu \\((0;1)\\)\n\n2\n\nGenerování 15 čísel z Poisonova rozdělení z intervalu \\((0;1)\\)\n\n\n\n\nGenerovaná čísla nejsou náhodná v pravém slova smyslu, ale označují se jako pseudonáhodná, neboť při jejich tvorbě se vychází z jiste sekvence čísel. Tuto sekvenci je možné přímo zvolit, čímž je zajištěna funkcí set.seed() volanou před každou vygenerovanou sekvencí.\n\n\nKód\nseed &lt;- .Random.seed\nhead(seed, 10)\n\n\n [1]       10403           2 -1885648490 -1942284015    18422467   962507474\n [7]  1368609636  2028418727  -803815427  -544032268\n\n\n\n\nKód\nplot(.Random.seed)\n\n\n\n\n\n\n\n\n\n\n\nKód\nx &lt;- sample(x = 1:1e3, size = 1)\nset.seed(x)\nrunif(1)\n\nset.seed(x)\nrunif(2)\n\n\n[1] 0.4238429\n[1] 0.4238429 0.8677784"
  },
  {
    "objectID": "05_rozdeleni.html#diskrétní-rozdělení",
    "href": "05_rozdeleni.html#diskrétní-rozdělení",
    "title": "7  Rozdělení pravděpodobnosti",
    "section": "7.2 Diskrétní rozdělení",
    "text": "7.2 Diskrétní rozdělení\n\n\n\n\n7.2.1 Poissonovo rozdělení\n\n\nKód\n# par(mfrow = c(2, 2))\nlambda &lt;- c(1, 4, 8)\nplot(x = 1:20, ylim = c(0,0.4), type = \"n\")\nfor(l in lambda) {\n  lines(dpois(x = 1:20, lambda = l), lty = l)\n  points(dpois(x = 1:20, lambda = l), col = l)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nVytvořte jednoduchý simulátor deště pro jeden rok podle následujícího zadání\na) Buď prší, nebo ne. Prvděpodobnost že neprší, je 90 %.\nb) Pokud pršelo předchozí časový úsek, tak se zvyšuje pravděpodobnost že prší dnes na 25 %.\n\n\n\nŘešení:\n\n\n\nKód\n1x &lt;- vector(mode = \"numeric\", length = 365)\n\nfor(i in seq_along(x)) {\n2  if(i == 1) next\n  x[i] &lt;- ifelse(\n3            test = x[i - 1] &gt; 0,\n            yes = rbinom(n = 1,\n                         size = 1,\n                         prob = 0.10) * rchisq(n = 1,\n                                               df = 1,\n                                               ncp = 0),\n            no = rbinom(n = 1, \n                        size = 1, \n                        prob = 0.25) * rchisq(n = 1, \n                                              df = 3, \n                                              ncp = 1)) \n}\nbarplot(x, \n        ylim = 1.5*c(max(x), 0), \n        col = \"dodgerblue4\", \n        border = \"dodgerblue4\")\n\n\n\n1\n\nPředem alokuejeme vektor hodnot.\n\n2\n\nJe třeba ošetřit případ, kdy začínáme a neexistuje úsek \\(x(t-1)\\).\n\n3\n\nPokud pršelo v předchozím čase"
  },
  {
    "objectID": "05_rozdeleni.html#spojitá-rozdělení",
    "href": "05_rozdeleni.html#spojitá-rozdělení",
    "title": "7  Rozdělení pravděpodobnosti",
    "section": "7.3 Spojitá rozdělení",
    "text": "7.3 Spojitá rozdělení\nBěhem počítání s rozděleními se snažíme nalézt odpovědi na podobné otázky:\n“Jaká je pravděpodobnost, že veličina \\(X\\) je menší než 7.5?”\n\n7.3.1 Normální rozdělení\nChceme spočítat pravědpodobnost, že náhodná hodnota, vybraná z populace \\(X\\sim \\mathsf{N}(\\mu = 3; \\sigma^2 = 2,2)\\) bude menší než 5,5. Početně je úkon řešen standardizací a určením nového\n\n\n\n\n\n\n\nPravděpodobnost, že \\(x\\) je menší nebo rovno 2.\n\n\n\n\n\n\n\n\n\nPravděpodobnost, že \\(x\\) je menší nebo rovno 2.\n\n\n\n\n\n\nProvedeme standardizaci na \\(Z\\sim\\mathsf{N}(0; 1)\\) \\[\nZ = \\dfrac{X - \\mu}{\\sigma} \\approx \\dfrac{5,5 - 3}{1,48324} \\approx 1,6855\n\\] \\(P(Z &lt; 1,69)\\) Spočítáme s pomocí kvantilu Standardizovaného Normálního rozdělení. Tento úkon R dělá z nás, ale pro porovnání si uvedeme obě varianty:\n\n\nKód\ncbind(\n  N = pnorm(q = 1.6855, mean = 0, sd = 1, lower.tail = TRUE),\n  Z = pnorm(q = 5.5, mean = 3, sd = sqrt(2.2), lower.tail = TRUE)\n)\n\n\n             N         Z\n[1,] 0.9540539 0.9540539\n\n\nHledaná pravděpodobnost je 95.45 %.\n\n\n\n\n\n\nPoznámka\n\n\n\nZde je dobré upozornit na numerické zaokrouhlovací chyby, které během počítačového zpracování dat vznikají.\n\n\nKód\nall.equal(\n  pnorm(q = 1.6855, mean = 0, sd = 1, lower.tail = TRUE), \n  pnorm(q = 5.5, mean = 3, sd = sqrt(2.2), lower.tail = TRUE)\n)\n\n\n[1] \"Mean relative difference: 3.473763e-08\"\n\n\nKód\nall.equal(\n  pnorm(q = 1.6855, mean = 0, sd = 1, lower.tail = TRUE), \n  pnorm(q = 5.5, mean = 3, sd = sqrt(2.2), lower.tail = TRUE), tolerance = 0.005\n)\n\n\n[1] TRUE\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nS pomocí funkce curve() vykreslete hustotu funkce normovaného normálního rozdělení danou předpisem: \\[\nf(x) = \\dfrac{1}{\\sqrt{2\\pi}}e^{-\\frac{x^2}{2}}\n\\]\nMáme náhodnou veličinu \\(X\\), jež sleduje Normální rozdělení s parametry \\(\\mu = 5\\) a \\(\\sigma^2 = 4,13\\), nebo-li \\(X\\sim \\mathsf{N}(5; 4,13)\\). Určete pravděpodobnost: \n\n\\(P(X &lt; 8)=\\)  \n\n\\(P(X \\leq 8)=\\)  \n\n\\(P(X &gt; 12,4)=\\)  \n\n\nPro jakou hodnotu \\(\\gamma\\) je pravděpodobnost přibližně:\n\n\\(P(X &lt; \\gamma) = 0,76\\quad\\gamma=\\)  \n\n\\(P(X &gt; \\gamma) = 0,16\\quad\\gamma=\\) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.3.2 Studentovo-\\(t\\) rozdělení\nPoužívá se pro odhad střední hodnoty souboru pocházejícího z normálního rozdělení s neznámým parametrem \\(\\sigma\\). Více v Kapitola 9.\n\n\nKód\nqt(p = 0.95, df = 100)\n\n\n[1] 1.660234\n\n\n\n\n7.3.3 Logaritmicko-normální rozdělení\nNabývá pouze kladných hodnot. Můžeme jej nalézt například v rozdělení **průtoků, simulacích chemické konncentrace.\n\n\n\n\n\n\nPoznámka\n\n\n\nČHMÚ používá pro odhad a konstrukci \\(m-\\)denních průtoků logaritmicko-normální rodzdělení s pěti parametry.\n\ntvar transformace se třemi, s pěti a ve standardizovaném tvaru pro průtoky     \n\n\\(\\mu\\): výběrový průmer normálního rozdělení\n\n\\(\\sigma\\): směrodatná odchylka normálního rozdělení\n\n\\(\\gamma\\): parametru posunu\n\n\\(\\alpha\\): parametr měřítka\n\n\\(\\beta\\): parametr tvaru (3. a 4. moment)\n\n\n\\[\nf(x;\\mu, \\sigma, \\gamma, \\alpha, \\beta) = \\dfrac{\\beta}{(x-\\gamma)\\sigma\\sqrt{2\\pi}}\\exp\\left(-\\frac{\\left(\\ln{\\left(\\dfrac{x-\\gamma}{\\alpha}\\right)}-\\mu\\right)^2}{2\\sigma^2}\\right),\\quad x&gt;\\gamma\n\\]\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.3.4 \\(F\\) rozdělení\nJinak také Fisherovo-Snedecorovo rozdělení je používáno pro sestrojení \\(100(1-\\alpha)\\%\\) intevalu spolehlivosti pro podíl rozptylů normálního rozdělení a je to modelové rozdělení testovací statistiky pro ověření shodnosti dvou rozptylů. V ?sec-anova nalezneme \\(F-\\)rozdělení u testování hypotézy o rovnosti středních hodnot u více než dvou výběrových souborů.\n\n\n7.3.5 \\(\\chi^2\\) rozdělení\nNarozdíl od předchozích zde uvedených rozdělení není \\(\\chi^2\\) rozdělení u pozorovaných veličin příliš časté. Nicméně je to významné rozdělení z hlediska testování statistických hypotéz (Kapitola 9) při porovnávání rozdělení vzájemně. Používá se při stanovení intervalů spolehlivosti výběrový rozptyl.\n\\[\n\\dfrac{(n-1)s_x^2}{\\chi^2_{1-\\alpha/2}} \\leq \\sigma_x^2\\leq \\dfrac{(n-1)s_x^2}{\\chi^2_{\\alpha/2}}\n\\tag{7.2}\\]\n\n\n\n\n\n\nCvičení\n\n\n\n\nGenerujte 10 čísel s pomocí normálního rozdělení s parametry \\(\\mu = 2.3\\) a \\(\\sigma = 4.23\\).\n\nGenerujte 50 čísel \\(X\\sim\\mathsf{Po}(\\lambda = 2.3)\\) s pomocí set.seed(123). Doplňte střední hodnotu generovaného souboru   \n\nJaká je pravděpodobnost, že veličina \\(X\\sim\\mathsf{N}(1.3, 4)\\), bude nabývat hodnot menších než 6?\n\nPředpokládejme, že \\(s_x^2=8,6\\) při \\(15\\) stupních volnosti. Doplňte následující výraz k určení 95% intervalu spolehlivosti pro \\(\\sigma_x^2\\) (viz Rovnice 7.2). \nc(15*  /qchisq( ,  ), 15*  /qchisq( , 15 ))\n\nNajděte následující hodnoty: - t_{0,95}(10), {0,1}^2(8), F{0,01}(13;4)"
  },
  {
    "objectID": "06_odhad.html#vlastnosti-odhadu",
    "href": "06_odhad.html#vlastnosti-odhadu",
    "title": "8  Bodový a intervalový odhad",
    "section": "8.1 Vlastnosti odhadu",
    "text": "8.1 Vlastnosti odhadu\nV mnoha situacích potřebujeme odhadnout určitý parametr (střední hodnotu, \\(90\\%\\) kvantil atp.) neznámé náhodné veličiny. Tento parametr odhadujeme pomocí nějaké statistiky výběru z této veličiny. Například odhadujeme střední hodnotu veličiny pomocí průměru. Abychom mohli určit hodnotu parametru (např. střední hodnotu) přesně, musel by být výběr nekonečně velký. Jelikož toto v praxi nenastane, náš odhad je vždy více či méně odlišný od skutečné hodnoty parametru (např. střední hodnoty) neznámé veličiny. Důležitou vlastností odhadu je nestrannost - o nestranném odhadu mluvíme pokud střední hodnota odhadu je rovna neznámému parametru.\nV přednáškách o charakteristikách náhodné veličiny a jejich odhadech je zmíněna rovnice\n\\[\n\\dfrac{\\sum\\limits_{i=1}^{n}(x_i - \\bar{x})^2}{n-1}\n\\]\njako nestranný odhad veličiny \\(X\\). Z definice rozptylu \\(\\mathbb{E}[(X - \\mathbb{E}(X^2))]\\) však vyplývá odhad\n\\[\n\\dfrac{\\sum\\limits_{i=1}^{n}(x_i - \\bar{x})^2}{n}.\n\\]\n\n\n\n\n\n\nCvičení\n\n\n\n\nDoplňte následující kód.\n\n\n\n\nKód\nX &lt;- data.frame()\nfor (i in 1:nsim) {\n  x &lt;- rnorm(n)\n  s_unb &lt;- 1/(n-1)\n  s_bia &lt;- 1/n\n  s_unb2 &lt;- 1/(n-1)\n  s_bia2 &lt;- 1/n\n  X &lt;- rbind(X, c(s_unb, s_bia, s_unb2, s_bia2))\n}\nnames(X) = c('UNB', 'BIA' , 'UNB2' ,'BIA2')\n\n\n\nNapište funkce pro odhad ropztylu.\n\nZamyslete se, které proměnné nejsou určeny a doplňte je.\n\nSpočtěte pro každou metodu průměrný odhad a systematickou chybu tohoto odhadu.\n\nKterý odhad je nejméně vychýlený a v jaké situaci?\n\n\n\n\n\n8.1.1 Zákon velkých čísel\nZákon velkých čísel popisuje skutečnost, že s rostoucím počtem opakování nezávislých náhodných pokusů se empirické charakteristiky (realizované výběrové odhady), které popisují výsledky těchto pokusů blíží k teoretickým charakteristikám.\n\n\n\n\n\n\nÚloha\n\n\n\n\nGenerujte s pomocí funkce rnorm postupně \\(10\\), \\(10^2\\), \\(10^3\\) čísel se shodnou střední hodnotou a shodným rozptylem. Spočítejte \\(\\bar{x}\\) a \\({s^2}\\), použijte nápovědu. Okomentujte výsledky."
  },
  {
    "objectID": "06_odhad.html#bodový-odhad",
    "href": "06_odhad.html#bodový-odhad",
    "title": "8  Bodový a intervalový odhad",
    "section": "8.2 Bodový odhad",
    "text": "8.2 Bodový odhad\nBodovým odhadem se se rozumí jednočíselná hodnota, která reprezentuje vybraný moment statistického souboru jako celek. Bodovým odhadem je například výběrový průměr nebo výběrový rozptyl.\n\n\nKód\nset.seed(100)\nx &lt;- rnorm(10, 10, 10)\nmean(x)\n## [1] 9.820428\nvar(x)\n## [1] 31.48541\n\n\n\n8.2.1 Odhad parametru \\(\\mu\\), neboli střední hodnoty normálního rozdělení s neznámým rozptylem\nTakto formulovaný bodový a intervalový je jednou z nejčastěji prováděných úloh. Nejprve bodovým odhadem zjistíme výběrový průměr souboru.\n\n\nKód\nmean(x)\n\n\n[1] 9.820428\n\n\nVidíme, že \\(x =\\) 9.8204284. Pro tento průmer následně spočítáme interval spolehlivosti."
  },
  {
    "objectID": "06_odhad.html#intervalový-odhad",
    "href": "06_odhad.html#intervalový-odhad",
    "title": "8  Bodový a intervalový odhad",
    "section": "8.3 Intervalový odhad",
    "text": "8.3 Intervalový odhad\nV případech, kdy chceme znát polohu bodového odhadu s nějakou danou pravděpodobností, můžeme se pokusit zkonstruovat tzv. intervalový odhad. Rovnice 8.1 je rovnice pro intervalový odhad střední hodnoty při neznámém rozptylu.\n\\[\n\\bar{X} \\pm \\dfrac{s}{\\sqrt{n}}t_{1-\\alpha/2}(n-1)\n\\tag{8.1}\\]\n\\(100(1-\\alpha)\\%\\) interval spolehlivosti je rozmezí, ve kterém se usuzovaná hodnota základního souboru bude nacházet s určitou pravěděpodobností. Je tomu tak současně za předpokladu, že samotná poloha hledaného parametru je konstantní.\n\n\nKód\nalpha &lt;- 0.05\ncbind(\n  mean(x) - sd(x)/length(x)*qt(p = 1 - alpha/2, df = length(x) - 1),\n  mean(x) + sd(x)/length(x)*qt(p = 1 - alpha/2, df = length(x) - 1)\n)\n\n\n        [,1]     [,2]\n[1,] 8.55109 11.08977"
  },
  {
    "objectID": "06_odhad.html#maximálně-věrohodný-odhad",
    "href": "06_odhad.html#maximálně-věrohodný-odhad",
    "title": "8  Bodový a intervalový odhad",
    "section": "8.4 Maximálně věrohodný odhad",
    "text": "8.4 Maximálně věrohodný odhad\nMaximálně věrohodný odhad je takový, který maximalizuje věrohodnostní funkci \\(L\\) pro výběr \\((x_1, x_2, \\ldots, x_n)\\)\n\\[\nL(\\theta, x_1, x_2, \\ldots, x_n) = p(x_1, \\theta) \\cdot p(x_2, \\theta) \\cdot \\ldots p(x_n, \\theta) = \\prod\\limits_{i=1}^{n}p(x_i, \\theta)\n\\] Konstrukce věrohodnostní funkce\n\n8.4.1 Maximálně věrohodný odhad pro normální rozdělení\nVjděme z pravděpodobnostní funkce normálního rozdělení s předpisem Rovnice 8.2, který\n\\[\nf(y|\\mu, \\sigma) = \\dfrac{1}{\\sigma\\sqrt{2\\pi}}\\exp\\left[-\\dfrac{(y-\\mu)^2}{2\\sigma^2}\\right]\n\\tag{8.2}\\]\nVěrohodnostní funkce je vyjádřena:\n\\[\nL\\left(\\mu, \\sigma^2; x_1, \\ldots, x_n\\right) = (2\\pi\\sigma^2)^{-n/2}\\exp\\left(-\\dfrac{1}{2\\sigma^2}\\sum_{j=1}^{n}(x_j-\\mu)^2\\right)\n\\tag{8.3}\\]\nDva parametry \\(\\mu\\) a \\(\\sigma\\) jsou neznámé\n\n\nKód\n1mu &lt;- 5\nsigma &lt;- 1\n\n2n &lt;- 1000\nx &lt;- rnorm(n, mu, sigma^2)\n\n3norm.lik &lt;- function(pars, x) {\n  n &lt;- length(x)\n  mu &lt;- pars[1]\n  sigma2 &lt;- pars[2]\n  logl &lt;- -0.5 * n * log(2*pi) - 0.5 * n * log(sigma2) - \n    (1/(2 * sigma2))*sum((x - mu)^2)\n4  return(-logl)\n}\n\n\n5result &lt;- optim(par = c(0.1, 2),\n                fn = norm.lik,\n                x = x,\n                method = \"BFGS\",\n                hessian = TRUE)\n\n6mle_mean &lt;- result$par[1]\nmle_sigma2 &lt;- result$par[2]\n\n\n\n1\n\nSkutečné parametry \\(\\mu\\) a \\(\\sigma\\), které použijeme ke generování náhodných čísel.\n\n2\n\nZískáme pseudonáhodná čísla z Normálního rozdělení.\n\n3\n\nDefinice věrohodnostní funkce Rovnice 8.3,\n\n4\n\nje nutné pro optimalizační algoritmus vrátit v záporné hodnotě.\n\n5\n\nS použitím funkce optim() hledáme maximálně věrohodný odhad. Je potřeba zadat počáteční parametry, optimalizovanou funkci, vektor měření a methodu řešení. Pokud bychom chtěli i intervalový odhad, je nutné nechat spočítat hessián, neboli determinant Hessovy matice.\n\n6\n\nUložíme získané hodnoty odhadů.\n\n\n\n\nMLE pro střední hodnotu: 5.0232384 \nMLE pro rozptyl: 1.065408."
  },
  {
    "objectID": "06_odhad.html#ttest",
    "href": "06_odhad.html#ttest",
    "title": "8  Bodový a intervalový odhad",
    "section": "8.5 \\(t\\)-test",
    "text": "8.5 \\(t\\)-test\nTestování hypotéz podrobněji probereme v Kapitola 9. Nyní si nicméně ukážeme, že výstupem funkce t.test() je rovněž intervalový odhad pro střední hodnotu Normálního rozdělení při neznámém rozptylu. Testovací statistika pro oboustrannou alternativu má hodnotu\n\\[\n\\dfrac{|\\bar{x} - \\mu_0|}{s}\\sqrt{n} &gt; t_{\\alpha/2}(n-1)\n\\] a pro jednostrannou alternativu \\(\\mu &gt; \\mu_0\\)\n\\[\n\\dfrac{\\bar{x} - \\mu_0}{s}\\sqrt{n} &gt; t_{\\alpha}(n-1)\n\\] respektive\n\\[\n\\dfrac{\\bar{x} - \\mu_0}{s}\\sqrt{n} &lt; t_{\\alpha}(n-1)\n\\] pro \\(\\mu &lt; \\mu_0\\). \\(n-1\\) je počet stupňů volnosti.\n\n\n\n\n\n\nÚloha\n\n\n\n\nSpočítejte pomocí funkce t.test intervalový odhad pro x = rnorm(100) a set.seed(100)."
  },
  {
    "objectID": "07_testovani.html#postup-testování-statistické-hypotézy",
    "href": "07_testovani.html#postup-testování-statistické-hypotézy",
    "title": "9  Testování hypotéz",
    "section": "9.1 Postup testování statistické hypotézy:",
    "text": "9.1 Postup testování statistické hypotézy:\n\nFormulace nulové \\(\\mathrm{H}_0\\) a alternativní \\(\\mathrm{H}_a\\) hypotézy,\n\nvolba hladiny významnosti \\(\\alpha\\),\n\nvolba testovací statistiky,\n\nurčení kritického oboru testové statistiky,\n\nvyhodnocení testu s pomocí p-hodnoty.\n\nVýsledkem testování je buď a) zamítnutní nulové hypotézy1 b) nezamítnutní nulové hypotézy.\n\n\n\n\n\nRozhodnutí\nSkutečnost\n\n\n$$\\mathrm{H}_0$$\n$$\\neg \\mathrm{H}_0$$\n\n\nNazamítáme $$\\mathrm{H}_0$$\nSprávné rozhodnutí: $$P = 1 - \\alpha$$\nNastává chyba II. druhu: $$P = \\beta$$\n\n\nZamítáme $$\\mathrm{H}_0$$\nChyba I. druhu: $$P = \\alpha$$\nSprávné rozhodnutí: $$P = 1- \\beta$$\n\n\n\nSíla testu \\(\\beta\\) je pravěpodobnost, že je testem zamítnuta nulová hypotéza, která je skutečně neplatná. \\(P(\\mathrm{H}_A|\\mathrm{H}_A) = 1-\\beta\\)"
  },
  {
    "objectID": "07_testovani.html#p-hodnota",
    "href": "07_testovani.html#p-hodnota",
    "title": "9  Testování hypotéz",
    "section": "9.2 \\(p-\\)hodnota",
    "text": "9.2 \\(p-\\)hodnota\nMísto porovnání hodnoty testovacího kritéria s kritickými hodnotami lze pro rozhodování o platnosti či neplatnosti nulové hypotézy použít i tzv. \\(p-\\)hodnotu (anglicky p-value). Definice \\(p-\\)hodnoty je poněkud obšírná - jedná se o odhad pravděpodobnosti, že daný výsledek nebo výsledek, který je ještě extrémnější než ten pozorovaný, mohl nastat náhodou, za předpokladu, že nulová hypotéza je pravdivá."
  },
  {
    "objectID": "07_testovani.html#jednovýběrové-testy",
    "href": "07_testovani.html#jednovýběrové-testy",
    "title": "9  Testování hypotéz",
    "section": "9.3 Jednovýběrové testy",
    "text": "9.3 Jednovýběrové testy\nPředstavme si, že hledáme odpověď na otázky typu: “Jaká je střední hodnota souboru?”, “Je střední hodnota souboru výrazně odlišná od očekávání (například na základě teoretického poznání)”? “Jaká je mír nejistoty odhadu této střední hodnoty?”."
  },
  {
    "objectID": "07_testovani.html#alpha-interval-spolehlivosti",
    "href": "07_testovani.html#alpha-interval-spolehlivosti",
    "title": "9  Testování hypotéz",
    "section": "9.4 \\(100(1-\\alpha)\\%\\) interval spolehlivosti",
    "text": "9.4 \\(100(1-\\alpha)\\%\\) interval spolehlivosti\nVrátíme se krátce k intervalu spolehlivosti z předchozí hodiny.\n\\[\n\\bar{x} - 1.96\\dfrac{\\sigma}{\\sqrt{n}}\\leq\\mu\\leq \\bar{x} + 1.96\\dfrac{\\sigma}{\\sqrt{n}}\n\\]\n\\[\n\\bar{x} - t_{(1-\\alpha/2)}(\\nu)\\dfrac{\\sigma}{\\sqrt{n}}\\leq\\mu\\leq \\bar{x} + t_{(1-\\alpha/2)}(\\nu)\\dfrac{\\sigma}{\\sqrt{n}}\n\\]\nkde \\(\\nu=n-1\\) je počet stupňů volnosti. Kvantil \\(t_{\\alpha/2}\\) lze získat následovně\n\n\nKód\nalpha &lt;- 0.05\nnu &lt;- n - 1\nqt(p = (1 - alpha)/2, df = nu)\n\n\n\n9.4.1 Příklad 1\nV tomto příkladu si ukážeme, jak to vypadá, když dojde k chybě 1. druhu. Dejme tomu, že jsme v průběhu práce sesbírali následující hodnoty: \n2.7012729, 1.948016, 1.8352938, 3.1679424, 0.526072, 2.1859689, 1.065823, 3.3036902, -0.3457034, -0.6952718 \nu procesu \\(X\\sim\\mathsf{N}(0; 1)\\)\n\n\nKód\n1set.seed(1450070)\nxd &lt;- rnorm(10)\ncurve(dnorm(x), from = -5, to = 5)\nrug(xd, lwd = 2)\nsegments(x0 = mean(xd), \n         x1 = mean(xd), \n         y0 = -0.2, \n         y1 = dnorm(mean(xd)), \n         lwd = 2, \n         col = \"orangered\",\n         xlab = \"\", \n         ylab = \"\")\n\n\n\n1\n\nV tomto příkladu potřebujeme vygenerovat specifické hodnoty, proto si určíme set.seed()\n\n\n\n\n\n\n\n\n\n\n\nData jsme získali s pomocí generátoru pro náhodné rozdělení, budeme předpokládat, že teoretický soubor má náhodné rozdělení s parametry \\(\\mu=0\\) a \\(\\sigma^2=1\\) a ověříme na hladině významnosti \\(\\alpha=0.05\\).\n\n\n\n\n\n\nÚloha\n\n\n\n\nStanovte znění \\(\\mathrm{H}_0\\) a \\(\\mathrm{H}_a\\).\nKolik bude stupňů volnosti?\n\n\n\n\n\nKód\nt.test(xd, mu = 0)\n\n\n\n    One Sample t-test\n\ndata:  xd\nt = 3.5511, df = 9, p-value = 0.006206\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 0.5696028 2.5690180\nsample estimates:\nmean of x \n  1.56931 \n\n\nZ výsledku testu vyplývá, že p-value \\(&lt; \\alpha\\), proto tedy musíme nulovou hypotézu\n\n\n9.4.2 Příklad 2\nV předchozím příkladu jsme testovali nulovou hypotézu oproti oboustranné alternativě, tzn. neřešili jsme, zda je střední hodnota menší či větší.\n\n\n\n\n\n\nÚloha\n\n\n\n\nS pomocí nápovědy nastavte argumenty funkce t.test() tak, aby byla test proběhl oproti jednostranné alternativě, že je skutečná střední hodnota nižší než 2.\nStudentův \\(t-\\)test lze použít za předpokladu, že data splňují tzv. normalitu. tu lze pro tento soubor snadno ověřit jiným testem - shapiro.test(). \\(\\mathrm{H}_0\\): rozdělení není odlišné od normálního. Zamítneme \\(\\mathrm{H}_0\\) na hladině významnosti \\(\\alpha=0,1\\)?\nZatím jsme použili jedovýběrový \\(t-\\)test na data pocházející z Normálního rozdělení. V případě, že by naše data nesplňovala předpoklady kladené na tento parametrický test, museli bychom volit neparametrickou variantu testu. Pro test hypotézy o střední hodnotě lze využít neparametrický Wilcoxonův test - wilcox.test(). Rozhodněte o volbě testu a proveďte s pomocí nápovědy test o rovnosti středních hodnot souborů z datové sady temp.csv."
  },
  {
    "objectID": "07_testovani.html#footnotes",
    "href": "07_testovani.html#footnotes",
    "title": "9  Testování hypotéz",
    "section": "",
    "text": "Zamítnutí nulové hypotézy neznamená, že nulová hypotéza ve skutečnosti nemůže platit, ale získaná data nevykazují objektivní důvody k jejímu přijetí.↩︎"
  },
  {
    "objectID": "09_casove_rady.html#autokorelační-funkce",
    "href": "09_casove_rady.html#autokorelační-funkce",
    "title": "10  Časové řady",
    "section": "10.1 Autokorelační funkce",
    "text": "10.1 Autokorelační funkce\nSlouží k posouzení, zda časová řada obsahuje cyklickou či periodickou složku a také, zda je či není řadou náhodných čísel. Graficky je vyjádřena pomocí korelogramu.\n\n\nKód\npar(mfrow = c(1, 2))\nacf(dataset$R)\nacf(co2)\n\n\n\n\n\nVlevo řada se silnou autokorelací složek bez znatelené periodicity, vpravo dtto s periodickou složkou"
  },
  {
    "objectID": "09_casove_rady.html#dekompozice-časové-řady",
    "href": "09_casove_rady.html#dekompozice-časové-řady",
    "title": "10  Časové řady",
    "section": "10.2 Dekompozice časové řady",
    "text": "10.2 Dekompozice časové řady\nDekompozicí časové řady rozumíme rozklad na složky:\n\nTrendovou \\(T_t\\)\nSezónní \\(S_t\\)\nCyklickou \\(C_t\\)\nNáhodnou \\(\\epsilon_t\\)\n\n\n10.2.1 Aditivní dekompozice\nPředpokládáme, že řadu lze rozložit na součet složek\n\\[\nY_t =T_t +S_t +C_t +\\epsilon_t,\n\\]\n\n\nKód\ndec_co2 &lt;- decompose(co2)\nplot(dec_co2)\n\n\n\n\n\nKód\nplot(dec_co2$trend)\n\n\n\n\n\n\n\n10.2.2 Residua\nOvěřte, zda po dekompozici co2 residua \\(\\epsilon_t\\) splňují definici bílého šumu tzn. mají nulovou střední hodnotu a konečný rozptyl a jsou nekorelované.\n\n\nKód\nshapiro.test(dec_co2$random)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  dec_co2$random\nW = 0.99506, p-value = 0.1549\n\n\nKód\nmean(dec_co2$random, na.rm = TRUE)\n\n\n[1] 0.001743421\n\n\nKód\nvar(dec_co2$random, na.rm = TRUE)\n\n\n[1] 0.07028142\n\n\nKód\n# ..."
  },
  {
    "objectID": "09_casove_rady.html#zhlazovací-funkce",
    "href": "09_casove_rady.html#zhlazovací-funkce",
    "title": "10  Časové řady",
    "section": "10.3 Zhlazovací funkce",
    "text": "10.3 Zhlazovací funkce\n\n\nKód\npar(mfrow = c(1, 2))\nplot(dataset$Tmin, type = \"l\", \n     col = \"slategray\", \n     lwd = 0.5)\nmd1 &lt;- loess(Tmin ~ na.omit(1:length(dataset$Tmin)), \n             data = dataset, \n             degree = 1)\nlines(md1$fitted, col = \"orangered\")\n\nplot(filter(x = dataset$R, \n             method = \"convolution\", \n             filter = c(rep(1/365.25, 365.25)), \n             sides = 1), \n      col = \"dodgerblue3\", \n     type = \"l\")\n\n\n\n\n\n\n\nKód\nmd2 &lt;- lm(Tmin ~ DTM, data = dataset)\nplot(dataset$Tmin, type = \"l\", \n     col = \"slategray\", \n     lwd = 0.5)\nlines(md1$fitted, col = \"darkred\")\nabline(coef(md2), col = \"orangered\")"
  },
  {
    "objectID": "10_hydro_index.html#srážko-odtokový-součinitel",
    "href": "10_hydro_index.html#srážko-odtokový-součinitel",
    "title": "11  Hydroklimatické indexy",
    "section": "11.1 Srážko-odtokový součinitel",
    "text": "11.1 Srážko-odtokový součinitel\nVyjadřuje poměr mezi dlouhodobým odtokem a srážkou na povodí\n\\[\n\\varphi\\:[\\text{mm}] = \\dfrac{Q\\:[\\text{mm}]}{P\\:[\\text{mm}]}\n\\tag{11.1}\\]\n\n\n\n\n\n\nÚloha\n\n\n\n\nSpočítejte odtokový součinitel pro dvě období 1980–2010 a 1990–2020."
  },
  {
    "objectID": "10_hydro_index.html#základní-odtok",
    "href": "10_hydro_index.html#základní-odtok",
    "title": "11  Hydroklimatické indexy",
    "section": "11.2 Základní odtok",
    "text": "11.2 Základní odtok\nSložka celkového odtoku v hydrologické bilanci, která je tvořená dotací z podzemních vod. Z odtokové řady se identifikuje aplikací statistických filtrů.\n::: callout-tip ## Úloha\n\nUpravte metodu 30denních klouzavých minim pro výpočet základního odtoku tak, aby bylo možné při volání funkce velikost okna upravovat. ::: vc\n\n\n\nKód\nklouzave_minimum &lt;- function(x) {\n  res &lt;- numeric(length(x) - 30 + 1)\n  for(i in 1:(length(x) - 30 + 1)) {\n    res[i] &lt;- min(x[i:(i + 30 - 1)])\n  }\n  return(res)\n}"
  },
  {
    "objectID": "10_hydro_index.html#budykova-křivka",
    "href": "10_hydro_index.html#budykova-křivka",
    "title": "11  Hydroklimatické indexy",
    "section": "11.3 Budykova křivka",
    "text": "11.3 Budykova křivka\nNa budykovu křivku jsme narazili už při tvorbě grafického výstupu v Kapitola 5. Popisuje referenční klimatické podmínky povodí."
  },
  {
    "objectID": "10_hydro_index.html#pardého-koeficienty",
    "href": "10_hydro_index.html#pardého-koeficienty",
    "title": "11  Hydroklimatické indexy",
    "section": "11.4 Pardého koeficienty",
    "text": "11.4 Pardého koeficienty\nTento ukazatel zobrazuje poměr měsíčního odtoku k celkovému ročnímu odtoku.\n\nS pomocí funkce aggregate() spočtěte roční odtoky\n\n\n\nKód\n1q_m &lt;- aggregate(q ~ year + month, data = QD165600, FUN = sum)\nq_yr &lt;- aggregate(q ~ year, data = q_m, FUN = sum)\n2parde &lt;- merge(q_m, q_yr, by = \"year\", suffixes = c(\"_month\", \"_year\"))\nparde$parde &lt;- round(parde$q_month / parde$q_year, 2)\n\n\n3medians &lt;- tapply(parde$parde, parde$month, median)\nbarvy &lt;- colorRampPalette(colors = RColorBrewer::brewer.pal(11, \"RdYlBu\"))\ncolor_palette &lt;- barvy(12)\nordered_colors &lt;- color_palette[rank(medians)]\n\n4boxplot(parde ~ month,\n        data = parde,\n        border = \"black\",\n        col = ordered_colors,\n        ylab = \"Odtok [mm]\",\n        xlab = \"Měsíc\")\n\n\n\n1\n\nNejprve dvakrát aplikujeme funkci aggregate(), abychom dostali součty odtoků za jednotlivé roky a za jednotlivé měsíce v letech.\n\n2\n\nVýsledné data.frame poté sloučíme do jednoho s pomocí funkce merge(), za příponu zvolíme časové okno, ze kterého jsme hodnoty počítali.\n\n3\n\nVytvoříme berevné schéma na základě 50% kvantilu hodnot.\n\n4\n\nVyneseme do krabicového grafu."
  },
  {
    "objectID": "10_hydro_index.html#index-předchozích-srážek",
    "href": "10_hydro_index.html#index-předchozích-srážek",
    "title": "11  Hydroklimatické indexy",
    "section": "11.5 Index předchozích srážek",
    "text": "11.5 Index předchozích srážek\nJe definována s pomocí rozpadové konstanty \\(k\\) a \\(n\\) předchozích dní\n\n\n\n\n\n\nÚloha\n\n\n\n\nNapište funkci pro výpočet \\(\\text{API}_n = \\sum\\limits^{n}_{i=1}\\text{ET}_\\text{C}(i)\\cdot P(i)\\)"
  },
  {
    "objectID": "10_hydro_index.html#frekvenční-křivky",
    "href": "10_hydro_index.html#frekvenční-křivky",
    "title": "11  Hydroklimatické indexy",
    "section": "11.6 Frekvenční křivky",
    "text": "11.6 Frekvenční křivky\nPravděpodobnost překročení \\(P(X\\geq x_i)\\) \\(i-\\)té hodnoty v souboru lze zapsat \\[\nP = \\dfrac{m}{n}, \\quad \\text{pokud } n\\rightarrow \\infty\n\\] V praxi je tento vzorec nepoužitelný, protože nereflektuje možnost výskytu nižšího člena souboru než měřeného u kterého je \\(P(X\\geq x_{\\min})=1\\). Vzorec byl Čegodajevem upraven na \\[\nP = \\dfrac{m-0,3}{n+0,4}\n\\] Vztah mezi pravděpodobností překročení \\(P\\) a dobou opakování \\(T'\\) je \\[\nT' = \\dfrac{1}{1-P(X\\geq x_i)}\n\\]\n\n11.6.1 \\(N-\\)letý (maximální) průtok\nNejvyšší hodnoty průtoku, kterých je dosaženo nebo překročeno průměrně 1\\(\\times\\) za \\(N\\) let. Určuje se pro doby opakování \\(N = 1, 2, 5, 10, 20, 50, 100\\) let.\n\n\n\n\n\n\nÚloha\n\n\n\n\nSpočítejte \\(Q_{20}\\), \\(Q_{50}\\) a \\(Q_{100}\\).\nVýpočet přetvořte na \\(N-\\)letý minimální průtok.\n\n\n\n\n\n11.6.2 \\(M-\\)denní průtok\nNejnižší hodnota průtoku, která je dosažena nabo překročena po dobu \\(M\\) dní v roce.\n\n\nKód\nM &lt;- c(seq(from = 30, to = 330, by = 30), 355, 364)\nMdenni &lt;- quantile(x = QD165600$q, probs = 1/(M-1))\n\nplot(Mdenni, \n     type = \"n\", \n     xlab = \"\", \n     ylab = expression(paste(\"Průtok [\", m^3*s^-1, \"]\")))\nlines(Mdenni)\ngrid(nx = 12, equilogs = FALSE)\npoints(Mdenni, pch = 21, bg = rev(rainbow(13, end = 0.7)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nÚloha\n\n\n\n\nSpočtete průměrný roční minimální průtok."
  },
  {
    "objectID": "11_korelace_regrese.html#sec-korelace",
    "href": "11_korelace_regrese.html#sec-korelace",
    "title": "12  Závislost dvou veličin",
    "section": "12.1 Korelace",
    "text": "12.1 Korelace\nKorelace je vztah mezi dvěma náhodnými veličinami. Zkoumá, zda se jedna ze zkoumaných veličin mění, pokud se zároveň mění i druhá. Korelace nezkoumá příčinnost, nelze tedy jednoznačně určit závislou a nezávislou proměnnou.\nMíru korelace dvou veličin posuzujeme korelačním koeficientem. V případe normality u obou veličin lze použít Paersonův korelační koeficient,\n\\[\nr_{xy} = \\dfrac{\\sum(x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\sum(x_i - \\bar{x})^2}\\sqrt{\\sum(y_i - \\bar{y})^2}}\n\\tag{12.1}\\]\npřičemž platí \\(r_{xy}\\in\\langle-1;1\\rangle\\). Alternativně můžeme použít neparametrický výpočet Spearmana, založený na diferencích pořadí pozorovaných hodnot, které definujeme jako \\(d_i = x_{ri} - y_{ri}\\)\n\\[\n\\rho = r_s = 1 - \\dfrac{6\\sum_{i=1}^{n}d_i^2}{n(n^2-1)}\n\\tag{12.2}\\]\n\n\n\n\n\n\nCvičení\n\n\n\n\nNapište vlastní funkci, které pro dané vektory x a y spočítá korelační Spearmanův koeficient.\n\n\n\nNejprve je nutné identifikovat pořadí,\n\ndále spočítat kvadrát vzdáleností,\n\na po dosazení počtu měření \\(n\\) dosadit do rovnice.\n\n\n\nVyzkoušejte obě funkce na datech\n\nŘešení:\n\n\n\nKód\nsp_k &lt;- function(x, y) {\n  rank_x &lt;- rank(x) \n  rank_y &lt;- rank(y) \n  d &lt;- rank_x - rank_y \n  d_sq &lt;- sum(d^2) \n  n &lt;- length(x) \n  1 - ((6 * d_sq) / (n*(n^2 - 1))) \n}\n\n\n\n\nKód\nsp_k(_, _)\ncor(_, _, method = \"Spearman\")\n\n\n\nPokuste se odhadnout korelační koeficient následujících veličin\n\n\n\n\n\n\n\n\n\n\n\n\npairs()"
  },
  {
    "objectID": "11_korelace_regrese.html#kovariance",
    "href": "11_korelace_regrese.html#kovariance",
    "title": "12  Závislost dvou veličin",
    "section": "12.2 Kovariance",
    "text": "12.2 Kovariance"
  },
  {
    "objectID": "11_korelace_regrese.html#regresní-model",
    "href": "11_korelace_regrese.html#regresní-model",
    "title": "12  Závislost dvou veličin",
    "section": "12.3 Regresní model",
    "text": "12.3 Regresní model\nNarozdíl od korelace, v regresní analýze sledujeme příčinnou závislost. Identifikujeme nezávislou proměnnou a závislou proměnnou. Míru závislosti posuzujeme pomocí lineárního regresního modelu. Cílem regrese je proložit naměřenými body přímku, která nejlépe vystihuje vztah mezi proměnnými.\n\\[\ny = \\beta_0 + \\beta_1x\n\\] kde \\(y\\) je závislá proměnná, \\(x\\) je nezávislá proměnná, \\(\\beta_0\\) je počátek (intercept) a \\(\\beta_1\\) je sklon přímky.\nLineární model regresního typu definujeme v R pomocí funkce lm(), které na první pozici dosazujeme výraz ve formátu rovnice formula, např. lm(y ~ x). Model vyhodnocujeme funkcí summary a mezi sebou porovnáváme pomocí kritérií zohledňující vysvětlenou variabilitu/věrohodnost modelu a jeho komplexnost, např. Akaikeho informační kritérium.\n\\[\n\\text{AIC} = 2k - 2\\ln(\\hat{L})\n\\] kde \\(k\\) je počet volných parametrů modelu a \\(\\hat{L}\\) je věrohodnostní funkce modelu.\n\nCvičení\n\nUvažujme následující data, kde předpokládáme příčinnou závislost \\(y\\) na \\(x\\).\n\n\n\nKód\ndfr &lt;- data.frame(\n  x &lt;- c( 3.93,  3.83,  7.11,  6.98,  7.87,  9.11, 10.04,  9.99, 10.11, 10.93, \n         11.01, 11.93, 11.94, 11.88, 11.82, 12.98, 13.04, 13.04, 13.11, 13.99, \n         13.97, 13.99, 13.97, 15.08, 14.93, 14.86, 15.89, 16.15, 17.08, 17.18, \n         16.96, 17.95, 18.14, 18.09, 18.05, 19.04, 19.08, 19.07, 20.11, 20, \n         20,    20.14, 19.92, 22.13, 23.09, 23.9 , 23.95, 24.06, 23.95, 24.94\n  ),\n  y &lt;- c( 1.93, 10.01,  3.73, 22.09, 15.86, 10.09, 18.09, 25.91, 34.09, 16.89, \n         28.04, 13.95, 19.98, 23.98, 27.78, 26.19, 33.85, 33.96, 45.88, 25.96, \n         35.89, 60.  , 80.03, 20.06, 25.92, 54.03, 31.96, 40.12, 32.03, 39.95, \n         50.2 , 41.91, 55.92, 75.92, 83.89, 35.94, 45.94, 67.85, 32.05, 48.11, \n         52.11, 55.95, 64.02, 65.9 , 53.94, 69.92, 92.1 , 92.78, 99.03, 85.09)\n)\n\n\n\nSestrojme lineární model md1\n\n\n\nKód\nmd1 &lt;- lm(formula = y ~ x, data = dfr)\n\n\n\nStruktura objektu md1 je komplexní, můžeme vybírat jednotlivé proměnné k dalším účelům, například pro tvorbu grafů.\n\n\n\nKód\n1str(md1, 1)\n\n\n\n1\n\nVypíšeme strukturu objektu do první hierarchické úrovně\n\n\n\n\nList of 12\n $ coefficients : Named num [1:2] -15.72 3.78\n  ..- attr(*, \"names\")= chr [1:2] \"(Intercept)\" \"x\"\n $ residuals    : Named num [1:50] 2.79 11.25 -7.43 11.42 1.82 ...\n  ..- attr(*, \"names\")= chr [1:50] \"1\" \"2\" \"3\" \"4\" ...\n $ effects      : Named num [1:50] -300.7778 140.5186 -9.3636 9.458 0.0675 ...\n  ..- attr(*, \"names\")= chr [1:50] \"(Intercept)\" \"x\" \"\" \"\" ...\n $ rank         : int 2\n $ fitted.values: Named num [1:50] -0.862 -1.24 11.163 10.672 14.037 ...\n  ..- attr(*, \"names\")= chr [1:50] \"1\" \"2\" \"3\" \"4\" ...\n $ assign       : int [1:2] 0 1\n $ qr           :List of 5\n  ..- attr(*, \"class\")= chr \"qr\"\n $ df.residual  : int 48\n $ xlevels      : Named list()\n $ call         : language lm(formula = y ~ x, data = dfr)\n $ terms        :Classes 'terms', 'formula'  language y ~ x\n  .. ..- attr(*, \"variables\")= language list(y, x)\n  .. ..- attr(*, \"factors\")= int [1:2, 1] 0 1\n  .. .. ..- attr(*, \"dimnames\")=List of 2\n  .. ..- attr(*, \"term.labels\")= chr \"x\"\n  .. ..- attr(*, \"order\")= int 1\n  .. ..- attr(*, \"intercept\")= int 1\n  .. ..- attr(*, \"response\")= int 1\n  .. ..- attr(*, \".Environment\")=&lt;environment: R_GlobalEnv&gt; \n  .. ..- attr(*, \"predvars\")= language list(y, x)\n  .. ..- attr(*, \"dataClasses\")= Named chr [1:2] \"numeric\" \"numeric\"\n  .. .. ..- attr(*, \"names\")= chr [1:2] \"y\" \"x\"\n $ model        :'data.frame':  50 obs. of  2 variables:\n  ..- attr(*, \"terms\")=Classes 'terms', 'formula'  language y ~ x\n  .. .. ..- attr(*, \"variables\")= language list(y, x)\n  .. .. ..- attr(*, \"factors\")= int [1:2, 1] 0 1\n  .. .. .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..- attr(*, \"term.labels\")= chr \"x\"\n  .. .. ..- attr(*, \"order\")= int 1\n  .. .. ..- attr(*, \"intercept\")= int 1\n  .. .. ..- attr(*, \"response\")= int 1\n  .. .. ..- attr(*, \".Environment\")=&lt;environment: R_GlobalEnv&gt; \n  .. .. ..- attr(*, \"predvars\")= language list(y, x)\n  .. .. ..- attr(*, \"dataClasses\")= Named chr [1:2] \"numeric\" \"numeric\"\n  .. .. .. ..- attr(*, \"names\")= chr [1:2] \"y\" \"x\"\n - attr(*, \"class\")= chr \"lm\"\n\n\n\n\nKód\nwith(data = dfr, \n     expr = plot(x, \n                 y, \n                 xlim = c(0, 30), \n                 ylim = c(md1$coefficients[1], \n                          max(md1$fitted.values) + 2)))\nabline(md1$coefficients, col = \"orangered\")\nabline(v = 0, lty = \"dashed\")\nabline(h = md1$coefficients[1], lty = \"dashed\")\n\n\n\n\n\n\nModel vyhodnotíme pomocí summary\n\n\n\nKód\nsummary(md1)\n\n\n\nCall:\nlm(formula = y ~ x, data = dfr)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-28.274  -9.410  -1.639  10.063  42.925 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -15.7241     6.3224  -2.487   0.0164 *  \nx             3.7816     0.3884   9.736 6.03e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.43 on 48 degrees of freedom\nMultiple R-squared:  0.6639,    Adjusted R-squared:  0.6568 \nF-statistic: 94.79 on 1 and 48 DF,  p-value: 6.032e-13\n\n\nSouhrn obsahuje původní zadání v podobě rovnice, dále identifikované koeficienty modelu, významnost závislosti indikuje přítomnost jedné nebo více * u vysvětlující proměnné; dále lze vyčíst podíl vysvětlené variabiltiy Adjusted R-squared:  0.6417.\n\n\n\nKód\npar(mfrow = c(2, 2))\nplot(md1, 1:4)\n\n\n\n\n\nR dále poskytuje grafické nástroje k posouzení vhodnosti zvoleného modelu. Zde nás budou zajímat zejména residua modelu. Dle prvního grafu by mohl model se závislostí na polynomu být lepší volbou.\n\nPokusme se sestavit alternativní model s kvadratickou vysvětlující proměnnou.\n\n\nKód\nmd2 &lt;- lm(y ~ poly(x, 2))\nsummary(md2)\n\n\n\nCall:\nlm(formula = y ~ poly(x, 2))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-28.086  -9.010  -3.459   4.693  45.048 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   42.536      2.027  20.985  &lt; 2e-16 ***\npoly(x, 2)1  140.519     14.333   9.804 6.05e-13 ***\npoly(x, 2)2   18.519     14.333   1.292    0.203    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.33 on 47 degrees of freedom\nMultiple R-squared:  0.6754,    Adjusted R-squared:  0.6616 \nF-statistic: 48.89 on 2 and 47 DF,  p-value: 3.29e-12\n\n\n\n\nKód\npar(mfrow = c(2, 2))\nplot(md2, 1:4)\n\n\n\n\n\n\n\nKód\nwith(data = dfr, \n     expr = plot(x, y, xlim = c(0, 30)))\npred &lt;- predict(md2)\nix &lt;- sort(dfr$x, index.return=T)$ix\nlines(x[ix], pred[ix], col = 'orangered')\n\n\n\n\n\nSrovnejme modely vzájemně\n\n\nKód\nAIC(md1, md2)\n\n\n    df      AIC\nmd1  3 412.8013\nmd2  4 413.0561\n\n\n\n\n\n\n\n\nCvičení\n\n\n\n\nProzkoumejte závislost odtoku na velikosti povodí \n\n\n\n\n\n\n\n\n\n\n\n\n\nPovodí\nvelikost \\(x_i\\)\npořadí\nodtok \\(y_i\\)\npořadí\nrozdíl \\(d_i\\)\n\\(d_i^2\\)\n\n\n\n\n1\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n10"
  },
  {
    "objectID": "12_extremalni_rozdeleni.html#vymezení-extrémní-hodnoty",
    "href": "12_extremalni_rozdeleni.html#vymezení-extrémní-hodnoty",
    "title": "13  Rozdělení extrémních hodnot",
    "section": "13.1 Vymezení extrémní hodnoty",
    "text": "13.1 Vymezení extrémní hodnoty\n\n13.1.1 Bloková maxima\n\n\n13.1.2 Překročení limitu\nZ dat jsou užita pouze pozorování překračující stanovenou mez, například 95 % kvantil.\n\n\n\n\n\n\nÚloha\n\n\n\n\n\nNahrajte do prostředí data …\nMetodou blokových maxim stanovte maxima"
  },
  {
    "objectID": "12_extremalni_rozdeleni.html#gumbellovo-rozdělení",
    "href": "12_extremalni_rozdeleni.html#gumbellovo-rozdělení",
    "title": "13  Rozdělení extrémních hodnot",
    "section": "13.2 Gumbellovo rozdělení",
    "text": "13.2 Gumbellovo rozdělení\nHustota funkce Gumbellova rozdělení je dána předpisem\n\\[\nf(x) = \\dfrac{1}{d}\\exp\\left(-\\dfrac{x-c}{d}\\right)\\cdot\\exp\\left[-exp\\left(-\\dfrac{x-c}{d}\\right)\\right]\n\\] kde \\(c\\) a \\(d\\) jsou parametry. Kvantilová funkce je pak \\[\nx_T = c - d\\cdot\\ln\\left[-\\ln\\left(1-\\dfrac{1}{T}\\right)\\right]\n\\]\nkde \\(T\\) je doba opakování a parametry odhadnuté metodou mometů jsou:\n\\[\nd = \\dfrac{\\sqrt{6}}{\\pi}\\sigma, \\quad c = \\mu-0.5772\\cdot d\n\\]\na \\(\\mu\\) \\(\\sigma\\) jsou momenty celkového souboru.\n\n\nKód\nfitgumbel &lt;- function(x, ...) {\n  mX &lt;- mean(x)\n  sdX &lt;- sd(x)\n  dX &lt;- sqrt(6)/pi*sdX\n  cX &lt;- mX - 0.5772*dX\n  curve(cX - d*log(-log(1-1/x)), add = TRUE, ...)\n}\n\nplot(x = c(1,100), \n     y = c(0,100), \n     type = \"n\", \n     xlab = \"Doba opakování (roky)\", \n     ylab = \"Maximální denní průtok v roce (mm/d)\")\n\n\n\n\n\n\n\n\n\nKód\n# fitgumbel()"
  }
]